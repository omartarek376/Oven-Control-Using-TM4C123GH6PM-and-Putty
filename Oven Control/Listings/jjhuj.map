Component: ARM Compiler 6.16 Tool: armlink [5dfeaa00]

==============================================================================

Section Cross References

    adc.o(.ARM.exidx.text.adc_init) refers to adc.o(.text.adc_init) for [Anonymous Symbol]
    lcd_config.o(.text.LCD_command) refers to lcd_config.o(.text.delayUs) for delayUs
    lcd_config.o(.text.LCD_command) refers to lcd_config.o(.text.delayMs) for delayMs
    lcd_config.o(.ARM.exidx.text.LCD_command) refers to lcd_config.o(.text.LCD_command) for [Anonymous Symbol]
    lcd_config.o(.ARM.exidx.text.delayUs) refers to lcd_config.o(.text.delayUs) for [Anonymous Symbol]
    lcd_config.o(.ARM.exidx.text.delayMs) refers to lcd_config.o(.text.delayMs) for [Anonymous Symbol]
    lcd_config.o(.text.LCD_start) refers to lcd_config.o(.text.delayMs) for delayMs
    lcd_config.o(.text.LCD_start) refers to lcd_config.o(.text.LCD_command) for LCD_command
    lcd_config.o(.text.LCD_start) refers to lcd_config.o(.text.delayUs) for delayUs
    lcd_config.o(.ARM.exidx.text.LCD_start) refers to lcd_config.o(.text.LCD_start) for [Anonymous Symbol]
    lcd_config.o(.text.LCD_data) refers to lcd_config.o(.text.delayUs) for delayUs
    lcd_config.o(.text.LCD_data) refers to lcd_config.o(.text.delayMs) for delayMs
    lcd_config.o(.ARM.exidx.text.LCD_data) refers to lcd_config.o(.text.LCD_data) for [Anonymous Symbol]
    lcd_config.o(.text.LCD_clear) refers to lcd_config.o(.text.LCD_command) for LCD_command
    lcd_config.o(.ARM.exidx.text.LCD_clear) refers to lcd_config.o(.text.LCD_clear) for [Anonymous Symbol]
    lcd_config.o(.text.LCD_line) refers to lcd_config.o(.text.LCD_command) for LCD_command
    lcd_config.o(.ARM.exidx.text.LCD_line) refers to lcd_config.o(.text.LCD_line) for [Anonymous Symbol]
    lcd_config.o(.text.LCD_display) refers to lcd_config.o(.text.LCD_data) for LCD_data
    lcd_config.o(.text.LCD_display) refers to strlen.o(.text) for strlen
    lcd_config.o(.ARM.exidx.text.LCD_display) refers to lcd_config.o(.text.LCD_display) for [Anonymous Symbol]
    lcd_config.o(.text.toString) refers to aeabi_memset.o(.text) for __aeabi_memset
    lcd_config.o(.ARM.exidx.text.toString) refers to lcd_config.o(.text.toString) for [Anonymous Symbol]
    lcd_config.o(.ARM.exidx.text.printchar) refers to lcd_config.o(.text.printchar) for [Anonymous Symbol]
    lcd_config.o(.text.print) refers to lcd_config.o(.text.printchar) for printchar
    lcd_config.o(.ARM.exidx.text.print) refers to lcd_config.o(.text.print) for [Anonymous Symbol]
    main.o(.text.main_task) refers to adc.o(.text.adc_init) for adc_init
    main.o(.text.main_task) refers to main.o(.bss.xAlarmQueue) for xAlarmQueue
    main.o(.text.main_task) refers to main.o(.bss.xUARTQueue) for xUARTQueue
    main.o(.text.main_task) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    main.o(.text.main_task) refers to lcd_config.o(.text.toString) for toString
    main.o(.text.main_task) refers to main.o(.bss.xLCDQueue) for xLCDQueue
    main.o(.text.main_task) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.main_task) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.ARM.exidx.text.main_task) refers to main.o(.text.main_task) for [Anonymous Symbol]
    main.o(.text.UART_task) refers to main.o(.bss.xUARTQueue) for xUARTQueue
    main.o(.text.UART_task) refers to lcd_config.o(.text.print) for print
    main.o(.text.UART_task) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.UART_task) refers to lcd_config.o(.text.printchar) for printchar
    main.o(.ARM.exidx.text.UART_task) refers to main.o(.text.UART_task) for [Anonymous Symbol]
    main.o(.text.LCD_task) refers to lcd_config.o(.text.LCD_clear) for LCD_clear
    main.o(.text.LCD_task) refers to main.o(.bss.xLCDQueue) for xLCDQueue
    main.o(.text.LCD_task) refers to main.o(.rodata.str1.1) for .L.str.3
    main.o(.text.LCD_task) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    main.o(.text.LCD_task) refers to lcd_config.o(.text.LCD_line) for LCD_line
    main.o(.text.LCD_task) refers to lcd_config.o(.text.LCD_display) for LCD_display
    main.o(.ARM.exidx.text.LCD_task) refers to main.o(.text.LCD_task) for [Anonymous Symbol]
    main.o(.text.ALARM_task) refers to main.o(.bss.xAlarmQueue) for xAlarmQueue
    main.o(.text.ALARM_task) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    main.o(.ARM.exidx.text.ALARM_task) refers to main.o(.text.ALARM_task) for [Anonymous Symbol]
    main.o(.text.main) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    main.o(.text.main) refers to main.o(.bss.xUARTQueue) for xUARTQueue
    main.o(.text.main) refers to main.o(.bss.xLCDQueue) for xLCDQueue
    main.o(.text.main) refers to main.o(.bss.xAlarmQueue) for xAlarmQueue
    main.o(.text.main) refers to dio.o(.text.GPIO_init) for GPIO_init
    main.o(.text.main) refers to main.o(.text.ALARM_task) for ALARM_task
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to main.o(.text.UART_task) for UART_task
    main.o(.text.main) refers to main.o(.text.LCD_task) for LCD_task
    main.o(.text.main) refers to main.o(.text.main_task) for main_task
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    dio.o(.text.GPIO_init) refers to lcd_config.o(.text.delayUs) for delayUs
    dio.o(.text.GPIO_init) refers to lcd_config.o(.text.LCD_start) for LCD_start
    dio.o(.ARM.exidx.text.GPIO_init) refers to dio.o(.text.GPIO_init) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerSetup) refers to eventrecorder.o(.text.EventRecorderTimerSetup) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderTimerGetFreq) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetFreq) refers to eventrecorder.o(.text.EventRecorderTimerGetFreq) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetCount) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderInitialize) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.crc16_ccitt) for crc16_ccitt
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderTimerSetup) for EventRecorderTimerSetup
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderTimerGetFreq) for EventRecorderTimerGetFreq
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.bss.TS_OverflowLock) for TS_OverflowLock
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderEnable) for EventRecorderEnable
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderStart) for EventRecorderStart
    eventrecorder.o(.ARM.exidx.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderInitialize) for [Anonymous Symbol]
    eventrecorder.o(.text.crc16_ccitt) refers to eventrecorder.o(.rodata.EventRecorderInfo) for EventRecorderInfo
    eventrecorder.o(.ARM.exidx.text.crc16_ccitt) refers to eventrecorder.o(.text.crc16_ccitt) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderEnable) refers to eventrecorder.o(.bss.noinit) for EventFilter
    eventrecorder.o(.ARM.exidx.text.EventRecorderEnable) refers to eventrecorder.o(.text.EventRecorderEnable) for [Anonymous Symbol]
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.text.UpdateTS) for UpdateTS
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for EventRecorderTimerGetCount
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.text.LockTS_Overflow) for LockTS_Overflow
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.text.UnlockTS_Overflow) for UnlockTS_Overflow
    eventrecorder.o(.ARM.exidx.text.EventGetTS) refers to eventrecorder.o(.text.EventGetTS) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.bss.noinit) for EventBuffer
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.GetRecordIndex) for GetRecordIndex
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.LockRecord) for LockRecord
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.UnlockRecord) for UnlockRecord
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.IncrementRecordsWritten) for IncrementRecordsWritten
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.IncrementRecordsDumped) for IncrementRecordsDumped
    eventrecorder.o(.ARM.exidx.text.EventRecordItem) refers to eventrecorder.o(.text.EventRecordItem) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecorderStart) refers to eventrecorder.o(.text.EventRecorderStart) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderDisable) refers to eventrecorder.o(.bss.noinit) for EventFilter
    eventrecorder.o(.ARM.exidx.text.EventRecorderDisable) refers to eventrecorder.o(.text.EventRecorderDisable) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecorderStop) refers to eventrecorder.o(.text.EventRecorderStop) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecorderTimerGetFreq) for EventRecorderTimerGetFreq
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecorderClockUpdate) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.EventCheckFilter) for EventCheckFilter
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecordData) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.GetContext) for GetContext
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecordData) refers to eventrecorder.o(.text.EventRecordData) for [Anonymous Symbol]
    eventrecorder.o(.text.EventCheckFilter) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.ARM.exidx.text.EventCheckFilter) refers to eventrecorder.o(.text.EventCheckFilter) for [Anonymous Symbol]
    eventrecorder.o(.text.GetContext) refers to eventrecorder.o(.text.atomic_inc8) for atomic_inc8
    eventrecorder.o(.ARM.exidx.text.GetContext) refers to eventrecorder.o(.text.GetContext) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.text.EventCheckFilter) for EventCheckFilter
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecord2) refers to eventrecorder.o(.text.EventRecord2) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.EventCheckFilter) for EventCheckFilter
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.GetContext) for GetContext
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecord4) refers to eventrecorder.o(.text.EventRecord4) for [Anonymous Symbol]
    eventrecorder.o(.text.LockTS_Overflow) refers to eventrecorder.o(.text.atomic_wr8) for atomic_wr8
    eventrecorder.o(.ARM.exidx.text.LockTS_Overflow) refers to eventrecorder.o(.text.LockTS_Overflow) for [Anonymous Symbol]
    eventrecorder.o(.text.UnlockTS_Overflow) refers to eventrecorder.o(.text.atomic_wr8) for atomic_wr8
    eventrecorder.o(.ARM.exidx.text.UnlockTS_Overflow) refers to eventrecorder.o(.text.UnlockTS_Overflow) for [Anonymous Symbol]
    eventrecorder.o(.text.UpdateTS) refers to eventrecorder.o(.text.atomic_wr32) for atomic_wr32
    eventrecorder.o(.ARM.exidx.text.UpdateTS) refers to eventrecorder.o(.text.UpdateTS) for [Anonymous Symbol]
    eventrecorder.o(.text.atomic_wr8) refers to eventrecorder.o(.bss.TS_OverflowLock) for TS_OverflowLock
    eventrecorder.o(.ARM.exidx.text.atomic_wr8) refers to eventrecorder.o(.text.atomic_wr8) for [Anonymous Symbol]
    eventrecorder.o(.text.atomic_wr32) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.ARM.exidx.text.atomic_wr32) refers to eventrecorder.o(.text.atomic_wr32) for [Anonymous Symbol]
    eventrecorder.o(.text.GetRecordIndex) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.GetRecordIndex) refers to eventrecorder.o(.text.atomic_inc32) for atomic_inc32
    eventrecorder.o(.ARM.exidx.text.GetRecordIndex) refers to eventrecorder.o(.text.GetRecordIndex) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.LockRecord) refers to eventrecorder.o(.text.LockRecord) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.UnlockRecord) refers to eventrecorder.o(.text.UnlockRecord) for [Anonymous Symbol]
    eventrecorder.o(.text.IncrementRecordsWritten) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.IncrementRecordsWritten) refers to eventrecorder.o(.text.atomic_inc32) for atomic_inc32
    eventrecorder.o(.ARM.exidx.text.IncrementRecordsWritten) refers to eventrecorder.o(.text.IncrementRecordsWritten) for [Anonymous Symbol]
    eventrecorder.o(.text.IncrementRecordsDumped) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.IncrementRecordsDumped) refers to eventrecorder.o(.text.atomic_inc32) for atomic_inc32
    eventrecorder.o(.ARM.exidx.text.IncrementRecordsDumped) refers to eventrecorder.o(.text.IncrementRecordsDumped) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.atomic_inc32) refers to eventrecorder.o(.text.atomic_inc32) for [Anonymous Symbol]
    eventrecorder.o(.text.atomic_inc8) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.ARM.exidx.text.atomic_inc8) refers to eventrecorder.o(.text.atomic_inc8) for [Anonymous Symbol]
    eventrecorder.o(.rodata.EventRecorderInfo) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    startup_tm4c123.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(STACK) for __initial_sp
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(.text) for Reset_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_tm4c123.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(.text) refers to system_tm4c123.o(.text.SystemInit) for SystemInit
    startup_tm4c123.o(.text) refers to __main.o(!!!main) for __main
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(HEAP) for Heap_Mem
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(STACK) for Stack_Mem
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.getOscClk) for getOscClk
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_tm4c123.o(.text.getOscClk) refers to system_tm4c123.o(.rodata..Lswitch.table.getOscClk) for .Lswitch.table.getOscClk
    system_tm4c123.o(.ARM.exidx.text.getOscClk) refers to system_tm4c123.o(.text.getOscClk) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.SystemInit) refers to system_tm4c123.o(.text.SystemInit) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSSetup) refers to freertos_evr.o(.bss.EvrFreeRTOSSetup.init) for EvrFreeRTOSSetup.init
    freertos_evr.o(.text.EvrFreeRTOSSetup) refers to eventrecorder.o(.text.EventRecorderInitialize) for EventRecorderInitialize
    freertos_evr.o(.text.EvrFreeRTOSSetup) refers to eventrecorder.o(.text.EventRecorderEnable) for EventRecorderEnable
    freertos_evr.o(.text.EvrFreeRTOSSetup) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSSetup) refers to freertos_evr.o(.text.EvrFreeRTOSSetup) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSTasks_TaskCreate) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskCreate) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskCreate) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSTasks_TaskCreateFailed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskCreateFailed) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskCreateFailed) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSTasks_TaskDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskDelete) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskDelete) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSTasks_TaskDelayUntil) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskDelayUntil) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskDelayUntil) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSTasks_TaskDelay) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskDelay) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskDelay) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSTasks_TaskPrioritySet) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskPrioritySet) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskPrioritySet) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSTasks_TaskSuspend) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskSuspend) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskSuspend) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSTasks_TaskResume) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskResume) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskResume) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSTasks_TaskResumeFromIsr) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskResumeFromIsr) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskResumeFromIsr) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSTasks_TaskIncrementTick) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskIncrementTick) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskIncrementTick) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSTasks_IncreaseTickCount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_IncreaseTickCount) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_IncreaseTickCount) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSTasks_TaskSwitchedOut) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskSwitchedOut) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskSwitchedOut) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSTasks_TaskSwitchedIn) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskSwitchedIn) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskSwitchedIn) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSTasks_TaskPriorityInherit) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskPriorityInherit) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskPriorityInherit) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSTasks_TaskPriorityDisinherit) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskPriorityDisinherit) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskPriorityDisinherit) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSTasks_MovedTaskToReadyState) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_MovedTaskToReadyState) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_MovedTaskToReadyState) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSTasks_PostMovedTaskToReadyState) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_PostMovedTaskToReadyState) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_PostMovedTaskToReadyState) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSTasks_LowPowerIdleBegin) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_LowPowerIdleBegin) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_LowPowerIdleBegin) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSTasks_LowPowerIdleEnd) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_LowPowerIdleEnd) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_LowPowerIdleEnd) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyTakeBlock) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskNotifyTakeBlock) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyTakeBlock) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyTake) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskNotifyTake) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyTake) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyWaitBlock) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskNotifyWaitBlock) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyWaitBlock) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyWait) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskNotifyWait) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyWait) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotify) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskNotify) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotify) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyFromIsr) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskNotifyFromIsr) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyFromIsr) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyGiveFromIsr) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskNotifyGiveFromIsr) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyGiveFromIsr) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSQueue_QueueCreate) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueCreate) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueCreate) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSQueue_QueueCreateFailed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueCreateFailed) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueCreateFailed) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSQueue_CreateMutex) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_CreateMutex) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_CreateMutex) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSQueue_CreateMutexFailed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_CreateMutexFailed) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_CreateMutexFailed) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSQueue_GiveMutexRecursive) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_GiveMutexRecursive) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_GiveMutexRecursive) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSQueue_GiveMutexRecursiveFailed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_GiveMutexRecursiveFailed) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_GiveMutexRecursiveFailed) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSQueue_TakeMutexRecursive) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_TakeMutexRecursive) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_TakeMutexRecursive) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSQueue_TakeMutexRecursiveFailed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_TakeMutexRecursiveFailed) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_TakeMutexRecursiveFailed) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSQueue_CreateCountingSemaphore) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_CreateCountingSemaphore) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_CreateCountingSemaphore) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSQueue_CreateCountingSemaphoreFailed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_CreateCountingSemaphoreFailed) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_CreateCountingSemaphoreFailed) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSQueue_QueueSend) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueSend) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueSend) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSQueue_QueueSendFailed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueSendFailed) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueSendFailed) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSQueue_QueueReceive) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueReceive) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueReceive) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSQueue_QueuePeek) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueuePeek) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueuePeek) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSQueue_QueuePeekFailed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueuePeekFailed) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueuePeekFailed) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSQueue_QueuePeekFromIsr) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueuePeekFromIsr) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueuePeekFromIsr) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSQueue_QueueReceiveFailed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueReceiveFailed) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueReceiveFailed) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSQueue_QueueSendFromIsr) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueSendFromIsr) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueSendFromIsr) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSQueue_QueueSendFromIsrFailed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueSendFromIsrFailed) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueSendFromIsrFailed) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSQueue_QueueReceiveFromIsr) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueReceiveFromIsr) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueReceiveFromIsr) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSQueue_QueueReceiveFromIsrFailed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueReceiveFromIsrFailed) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueReceiveFromIsrFailed) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSQueue_QueuePeekFromIsrFailed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueuePeekFromIsrFailed) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueuePeekFromIsrFailed) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSQueue_QueueDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueDelete) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueDelete) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSQueue_QueueRegistryAdd) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueRegistryAdd) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueRegistryAdd) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSQueue_BlockingOnQueueReceive) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_BlockingOnQueueReceive) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_BlockingOnQueueReceive) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSQueue_BlockingOnQueueSend) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_BlockingOnQueueSend) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_BlockingOnQueueSend) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSTimers_TimerCreate) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTimers_TimerCreate) refers to freertos_evr.o(.text.EvrFreeRTOSTimers_TimerCreate) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSTimers_TimerCreateFailed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTimers_TimerCreateFailed) refers to freertos_evr.o(.text.EvrFreeRTOSTimers_TimerCreateFailed) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSTimers_TimerCommandSend) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTimers_TimerCommandSend) refers to freertos_evr.o(.text.EvrFreeRTOSTimers_TimerCommandSend) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSTimers_TimerCommandReceived) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTimers_TimerCommandReceived) refers to freertos_evr.o(.text.EvrFreeRTOSTimers_TimerCommandReceived) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSTimers_TimerExpired) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTimers_TimerExpired) refers to freertos_evr.o(.text.EvrFreeRTOSTimers_TimerExpired) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSTimers_PendFuncCall) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTimers_PendFuncCall) refers to freertos_evr.o(.text.EvrFreeRTOSTimers_PendFuncCall) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSTimers_PendFuncCallFromIsr) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTimers_PendFuncCallFromIsr) refers to freertos_evr.o(.text.EvrFreeRTOSTimers_PendFuncCallFromIsr) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupCreate) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupCreate) refers to freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupCreate) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupCreateFailed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupCreateFailed) refers to freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupCreateFailed) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupSyncBlock) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupSyncBlock) refers to freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupSyncBlock) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupSyncEnd) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupSyncEnd) refers to freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupSyncEnd) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupWaitBitsBlock) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupWaitBitsBlock) refers to freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupWaitBitsBlock) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupWaitBitsEnd) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupWaitBitsEnd) refers to freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupWaitBitsEnd) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupClearBits) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupClearBits) refers to freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupClearBits) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupClearBitsFromIsr) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupClearBitsFromIsr) refers to freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupClearBitsFromIsr) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupSetBits) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupSetBits) refers to freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupSetBits) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupSetBitsFromIsr) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupSetBitsFromIsr) refers to freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupSetBitsFromIsr) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupDelete) refers to freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupDelete) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferCreateFailed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferCreateFailed) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferCreateFailed) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferCreateStaticFailed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferCreateStaticFailed) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferCreateStaticFailed) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferCreate) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferCreate) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferCreate) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferDelete) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferDelete) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferReset) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferReset) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferReset) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferBlockingOnSend) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferBlockingOnSend) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferBlockingOnSend) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferSend) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferSend) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferSend) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferSendFailed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferSendFailed) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferSendFailed) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferSendFromIsr) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferSendFromIsr) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferSendFromIsr) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferBlockingOnReceive) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferBlockingOnReceive) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferBlockingOnReceive) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferReceive) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferReceive) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferReceive) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferReceiveFailed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferReceiveFailed) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferReceiveFailed) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferReceiveFromIsr) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferReceiveFromIsr) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferReceiveFromIsr) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSHeap_Malloc) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSHeap_Malloc) refers to freertos_evr.o(.text.EvrFreeRTOSHeap_Malloc) for [Anonymous Symbol]
    freertos_evr.o(.text.EvrFreeRTOSHeap_Free) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSHeap_Free) refers to freertos_evr.o(.text.EvrFreeRTOSHeap_Free) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.text.prvTaskExitError) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.text.vPortEndScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks.o(.text.eTaskConfirmSleepModeStatus) for eTaskConfirmSleepModeStatus
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks.o(.text.vTaskStepTick) for vTaskStepTick
    port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep) refers to port.o(.text.vPortSuppressTicksAndSleep) for [Anonymous Symbol]
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.ARM.exidx.text.vPortValidateInterruptPriority) refers to port.o(.text.vPortValidateInterruptPriority) for [Anonymous Symbol]
    heap_1.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.pvPortMalloc.pucAlignedHeap) for pvPortMalloc.pucAlignedHeap
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.ucHeap) for ucHeap
    heap_1.o(.text.pvPortMalloc) refers to freertos_evr.o(.text.EvrFreeRTOSHeap_Malloc) for EvrFreeRTOSHeap_Malloc
    heap_1.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_1.o(.ARM.exidx.text.pvPortMalloc) refers to heap_1.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_1.o(.ARM.exidx.text.vPortFree) refers to heap_1.o(.text.vPortFree) for [Anonymous Symbol]
    heap_1.o(.text.vPortInitialiseBlocks) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_1.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_1.o(.text.xPortGetFreeHeapSize) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_1.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.text.xQueueGenericCreate) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueCreateFailed) for EvrFreeRTOSQueue_QueueCreateFailed
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.text.prvInitialiseNewQueue) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueCreate) for EvrFreeRTOSQueue_QueueCreate
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_CreateMutex) for EvrFreeRTOSQueue_CreateMutex
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.text.prvInitialiseMutex) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_CreateMutexFailed) for EvrFreeRTOSQueue_CreateMutexFailed
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGetMutexHolder) refers to queue.o(.text.xQueueGetMutexHolder) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR) refers to queue.o(.text.xQueueGetMutexHolderFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_GiveMutexRecursiveFailed) for EvrFreeRTOSQueue_GiveMutexRecursiveFailed
    queue.o(.text.xQueueGiveMutexRecursive) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_GiveMutexRecursive) for EvrFreeRTOSQueue_GiveMutexRecursive
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_BlockingOnQueueSend) for EvrFreeRTOSQueue_BlockingOnQueueSend
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueGenericSend) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueSend) for EvrFreeRTOSQueue_QueueSend
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSend) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueSendFailed) for EvrFreeRTOSQueue_QueueSendFailed
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_TakeMutexRecursive) for EvrFreeRTOSQueue_TakeMutexRecursive
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.text.xQueueTakeMutexRecursive) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_TakeMutexRecursiveFailed) for EvrFreeRTOSQueue_TakeMutexRecursiveFailed
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueReceive) for EvrFreeRTOSQueue_QueueReceive
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueReceiveFailed) for EvrFreeRTOSQueue_QueueReceiveFailed
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_BlockingOnQueueReceive) for EvrFreeRTOSQueue_BlockingOnQueueReceive
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateCountingSemaphore) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_CreateCountingSemaphore) for EvrFreeRTOSQueue_CreateCountingSemaphore
    queue.o(.text.xQueueCreateCountingSemaphore) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_CreateCountingSemaphoreFailed) for EvrFreeRTOSQueue_CreateCountingSemaphoreFailed
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvNotifyQueueSetContainer) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueSend) for EvrFreeRTOSQueue_QueueSend
    queue.o(.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvNotifyQueueSetContainer) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGenericSendFromISR) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueSendFromIsrFailed) for EvrFreeRTOSQueue_QueueSendFromIsrFailed
    queue.o(.text.xQueueGenericSendFromISR) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueSendFromIsr) for EvrFreeRTOSQueue_QueueSendFromIsr
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGiveFromISR) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueSendFromIsr) for EvrFreeRTOSQueue_QueueSendFromIsr
    queue.o(.text.xQueueGiveFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGiveFromISR) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueSendFromIsrFailed) for EvrFreeRTOSQueue_QueueSendFromIsrFailed
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueReceive) for EvrFreeRTOSQueue_QueueReceive
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueReceiveFailed) for EvrFreeRTOSQueue_QueueReceiveFailed
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_BlockingOnQueueReceive) for EvrFreeRTOSQueue_BlockingOnQueueReceive
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueuePeek) for EvrFreeRTOSQueue_QueuePeek
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueuePeekFailed) for EvrFreeRTOSQueue_QueuePeekFailed
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueReceiveFromISR) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueReceiveFromIsr) for EvrFreeRTOSQueue_QueueReceiveFromIsr
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceiveFromISR) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueReceiveFromIsrFailed) for EvrFreeRTOSQueue_QueueReceiveFromIsrFailed
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueuePeekFromISR) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueuePeekFromIsr) for EvrFreeRTOSQueue_QueuePeekFromIsr
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeekFromISR) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueuePeekFromIsrFailed) for EvrFreeRTOSQueue_QueuePeekFromIsrFailed
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to freertos_evr.o(.text.EvrFreeRTOSQueue_QueueDelete) for EvrFreeRTOSQueue_QueueDelete
    queue.o(.text.vQueueDelete) refers to heap_1.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateSet) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateSet) refers to queue.o(.text.xQueueCreateSet) for [Anonymous Symbol]
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueAddToSet) refers to queue.o(.text.xQueueAddToSet) for [Anonymous Symbol]
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueRemoveFromSet) refers to queue.o(.text.xQueueRemoveFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    queue.o(.ARM.exidx.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueSelectFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueSelectFromSetFromISR) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferGenericCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    stream_buffer.o(.text.xStreamBufferGenericCreate) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for prvInitialiseNewStreamBuffer
    stream_buffer.o(.text.xStreamBufferGenericCreate) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferCreate) for EvrFreeRTOSStreamBuf_StreamBufferCreate
    stream_buffer.o(.text.xStreamBufferGenericCreate) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferCreateFailed) for EvrFreeRTOSStreamBuf_StreamBufferCreateFailed
    stream_buffer.o(.ARM.exidx.text.xStreamBufferGenericCreate) refers to stream_buffer.o(.text.xStreamBufferGenericCreate) for [Anonymous Symbol]
    stream_buffer.o(.text.prvInitialiseNewStreamBuffer) refers to aeabi_memset.o(.text) for __aeabi_memset
    stream_buffer.o(.text.prvInitialiseNewStreamBuffer) refers to rt_memclr.o(.text) for __aeabi_memclr
    stream_buffer.o(.ARM.exidx.text.prvInitialiseNewStreamBuffer) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.vStreamBufferDelete) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferDelete) for EvrFreeRTOSStreamBuf_StreamBufferDelete
    stream_buffer.o(.text.vStreamBufferDelete) refers to heap_1.o(.text.vPortFree) for vPortFree
    stream_buffer.o(.text.vStreamBufferDelete) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    stream_buffer.o(.ARM.exidx.text.vStreamBufferDelete) refers to stream_buffer.o(.text.vStreamBufferDelete) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferReset) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for prvInitialiseNewStreamBuffer
    stream_buffer.o(.text.xStreamBufferReset) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferReset) for EvrFreeRTOSStreamBuf_StreamBufferReset
    stream_buffer.o(.text.xStreamBufferReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReset) refers to stream_buffer.o(.text.xStreamBufferReset) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSetTriggerLevel) refers to stream_buffer.o(.text.xStreamBufferSetTriggerLevel) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSpacesAvailable) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferBytesAvailable) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferBytesAvailable) refers to stream_buffer.o(.text.xStreamBufferBytesAvailable) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.prvBytesInBuffer) refers to stream_buffer.o(.text.prvBytesInBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.vTaskSetTimeOutState) for vTaskSetTimeOutState
    stream_buffer.o(.text.xStreamBufferSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for xTaskGenericNotifyStateClear
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer.o(.text.xStreamBufferSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.text.xStreamBufferSend) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferBlockingOnSend) for EvrFreeRTOSStreamBuf_StreamBufferBlockingOnSend
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer.o(.text.xStreamBufferSend) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferSend) for EvrFreeRTOSStreamBuf_StreamBufferSend
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    stream_buffer.o(.text.xStreamBufferSend) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferSendFailed) for EvrFreeRTOSStreamBuf_StreamBufferSendFailed
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSend) refers to stream_buffer.o(.text.xStreamBufferSend) for [Anonymous Symbol]
    stream_buffer.o(.text.prvWriteMessageToBuffer) refers to stream_buffer.o(.text.prvWriteBytesToBuffer) for prvWriteBytesToBuffer
    stream_buffer.o(.ARM.exidx.text.prvWriteMessageToBuffer) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferSendFromIsr) for EvrFreeRTOSStreamBuf_StreamBufferSendFromIsr
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.xStreamBufferSendFromISR) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferReceive) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.text.xStreamBufferReceive) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferReceiveFailed) for EvrFreeRTOSStreamBuf_StreamBufferReceiveFailed
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for xTaskGenericNotifyStateClear
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer.o(.text.xStreamBufferReceive) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferBlockingOnReceive) for EvrFreeRTOSStreamBuf_StreamBufferBlockingOnReceive
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    stream_buffer.o(.text.xStreamBufferReceive) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer.o(.text.xStreamBufferReceive) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferReceive) for EvrFreeRTOSStreamBuf_StreamBufferReceive
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceive) refers to stream_buffer.o(.text.xStreamBufferReceive) for [Anonymous Symbol]
    stream_buffer.o(.text.prvReadMessageFromBuffer) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for prvReadBytesFromBuffer
    stream_buffer.o(.ARM.exidx.text.prvReadMessageFromBuffer) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for prvReadBytesFromBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) for [Anonymous Symbol]
    stream_buffer.o(.text.prvReadBytesFromBuffer) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    stream_buffer.o(.ARM.exidx.text.prvReadBytesFromBuffer) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferReceiveFromIsr) for EvrFreeRTOSStreamBuf_StreamBufferReceiveFromIsr
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.xStreamBufferReceiveFromISR) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferIsEmpty) refers to stream_buffer.o(.text.xStreamBufferIsEmpty) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferIsFull) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.ARM.exidx.text.xStreamBufferIsFull) refers to stream_buffer.o(.text.xStreamBufferIsFull) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSendCompletedFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSendCompletedFromISR) refers to stream_buffer.o(.text.xStreamBufferSendCompletedFromISR) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveCompletedFromISR) refers to stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.uxStreamBufferGetStreamBufferNumber) refers to stream_buffer.o(.text.uxStreamBufferGetStreamBufferNumber) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.vStreamBufferSetStreamBufferNumber) refers to stream_buffer.o(.text.vStreamBufferSetStreamBufferNumber) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.ucStreamBufferGetStreamBufferType) refers to stream_buffer.o(.text.ucStreamBufferGetStreamBufferType) for [Anonymous Symbol]
    stream_buffer.o(.text.prvWriteBytesToBuffer) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    stream_buffer.o(.ARM.exidx.text.prvWriteBytesToBuffer) refers to stream_buffer.o(.text.prvWriteBytesToBuffer) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to heap_1.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskCreate) for EvrFreeRTOSTasks_TaskCreate
    tasks.o(.text.prvAddNewTaskToReadyList) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_MovedTaskToReadyState) for EvrFreeRTOSTasks_MovedTaskToReadyState
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_PostMovedTaskToReadyState) for EvrFreeRTOSTasks_PostMovedTaskToReadyState
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskDelete) for EvrFreeRTOSTasks_TaskDelete
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_1.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskDelayUntil) for EvrFreeRTOSTasks_TaskDelayUntil
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_MovedTaskToReadyState) for EvrFreeRTOSTasks_MovedTaskToReadyState
    tasks.o(.text.xTaskResumeAll) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_PostMovedTaskToReadyState) for EvrFreeRTOSTasks_PostMovedTaskToReadyState
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskDelay) for EvrFreeRTOSTasks_TaskDelay
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskPrioritySet) for EvrFreeRTOSTasks_TaskPrioritySet
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_MovedTaskToReadyState) for EvrFreeRTOSTasks_MovedTaskToReadyState
    tasks.o(.text.vTaskPrioritySet) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_PostMovedTaskToReadyState) for EvrFreeRTOSTasks_PostMovedTaskToReadyState
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskSuspend) for EvrFreeRTOSTasks_TaskSuspend
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSwitchContext) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskSwitchedOut) for EvrFreeRTOSTasks_TaskSwitchedOut
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSwitchContext) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskSwitchedIn) for EvrFreeRTOSTasks_TaskSwitchedIn
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskResume) for EvrFreeRTOSTasks_TaskResume
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_MovedTaskToReadyState) for EvrFreeRTOSTasks_MovedTaskToReadyState
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_PostMovedTaskToReadyState) for EvrFreeRTOSTasks_PostMovedTaskToReadyState
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskResumeFromIsr) for EvrFreeRTOSTasks_TaskResumeFromIsr
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_MovedTaskToReadyState) for EvrFreeRTOSTasks_MovedTaskToReadyState
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeFromISR) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_PostMovedTaskToReadyState) for EvrFreeRTOSTasks_PostMovedTaskToReadyState
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskStartScheduler) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskSwitchedIn) for EvrFreeRTOSTasks_TaskSwitchedIn
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvGetExpectedIdleTime) for prvGetExpectedIdleTime
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.prvIdleTask) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_LowPowerIdleBegin) for EvrFreeRTOSTasks_LowPowerIdleBegin
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortSuppressTicksAndSleep) for vPortSuppressTicksAndSleep
    tasks.o(.text.prvIdleTask) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_LowPowerIdleEnd) for EvrFreeRTOSTasks_LowPowerIdleEnd
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskIncrementTick) for EvrFreeRTOSTasks_TaskIncrementTick
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_MovedTaskToReadyState) for EvrFreeRTOSTasks_MovedTaskToReadyState
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_PostMovedTaskToReadyState) for EvrFreeRTOSTasks_PostMovedTaskToReadyState
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetHandle) refers to strlen.o(.text) for strlen
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.prvSearchForNameWithinSingleList) for prvSearchForNameWithinSingleList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.xTaskGetHandle) refers to tasks.o(.text.xTaskGetHandle) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvSearchForNameWithinSingleList) refers to tasks.o(.text.prvSearchForNameWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetIdleTaskHandle) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandle) refers to tasks.o(.text.xTaskGetIdleTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStepTick) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_IncreaseTickCount) for EvrFreeRTOSTasks_IncreaseTickCount
    tasks.o(.ARM.exidx.text.vTaskStepTick) refers to tasks.o(.text.vTaskStepTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.xTaskAbortDelay) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskAbortDelay) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_MovedTaskToReadyState) for EvrFreeRTOSTasks_MovedTaskToReadyState
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskAbortDelay) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_PostMovedTaskToReadyState) for EvrFreeRTOSTasks_PostMovedTaskToReadyState
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskAbortDelay) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskDelayUntil) for EvrFreeRTOSTasks_TaskDelayUntil
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_MovedTaskToReadyState) for EvrFreeRTOSTasks_MovedTaskToReadyState
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_PostMovedTaskToReadyState) for EvrFreeRTOSTasks_PostMovedTaskToReadyState
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_MovedTaskToReadyState) for EvrFreeRTOSTasks_MovedTaskToReadyState
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_PostMovedTaskToReadyState) for EvrFreeRTOSTasks_PostMovedTaskToReadyState
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.text.eTaskConfirmSleepModeStatus) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.text.uxTaskGetStackHighWaterMark2) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityInherit) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_MovedTaskToReadyState) for EvrFreeRTOSTasks_MovedTaskToReadyState
    tasks.o(.text.xTaskPriorityInherit) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_PostMovedTaskToReadyState) for EvrFreeRTOSTasks_PostMovedTaskToReadyState
    tasks.o(.text.xTaskPriorityInherit) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskPriorityInherit) for EvrFreeRTOSTasks_TaskPriorityInherit
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskPriorityDisinherit) for EvrFreeRTOSTasks_TaskPriorityDisinherit
    tasks.o(.text.xTaskPriorityDisinherit) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_MovedTaskToReadyState) for EvrFreeRTOSTasks_MovedTaskToReadyState
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityDisinherit) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_PostMovedTaskToReadyState) for EvrFreeRTOSTasks_PostMovedTaskToReadyState
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskPriorityDisinherit) for EvrFreeRTOSTasks_TaskPriorityDisinherit
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_MovedTaskToReadyState) for EvrFreeRTOSTasks_MovedTaskToReadyState
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_PostMovedTaskToReadyState) for EvrFreeRTOSTasks_PostMovedTaskToReadyState
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyTakeBlock) for EvrFreeRTOSTasks_TaskNotifyTakeBlock
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyTake) for EvrFreeRTOSTasks_TaskNotifyTake
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyWaitBlock) for EvrFreeRTOSTasks_TaskNotifyWaitBlock
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyWait) for EvrFreeRTOSTasks_TaskNotifyWait
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotify) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotify) for EvrFreeRTOSTasks_TaskNotify
    tasks.o(.text.xTaskGenericNotify) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_MovedTaskToReadyState) for EvrFreeRTOSTasks_MovedTaskToReadyState
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_PostMovedTaskToReadyState) for EvrFreeRTOSTasks_PostMovedTaskToReadyState
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyFromIsr) for EvrFreeRTOSTasks_TaskNotifyFromIsr
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_MovedTaskToReadyState) for EvrFreeRTOSTasks_MovedTaskToReadyState
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_PostMovedTaskToReadyState) for EvrFreeRTOSTasks_PostMovedTaskToReadyState
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyGiveFromIsr) for EvrFreeRTOSTasks_TaskNotifyGiveFromIsr
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_MovedTaskToReadyState) for EvrFreeRTOSTasks_MovedTaskToReadyState
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to freertos_evr.o(.text.EvrFreeRTOSTasks_PostMovedTaskToReadyState) for EvrFreeRTOSTasks_PostMovedTaskToReadyState
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.prvGetExpectedIdleTime) refers to tasks.o(.text.prvGetExpectedIdleTime) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.prvCheckForValidListAndQueue) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue) refers to timers.o(.text.prvCheckForValidListAndQueue) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.text.prvInitialiseNewTimer) refers to freertos_evr.o(.text.EvrFreeRTOSTimers_TimerCreate) for EvrFreeRTOSTimers_TimerCreate
    timers.o(.ARM.exidx.text.prvInitialiseNewTimer) refers to timers.o(.text.prvInitialiseNewTimer) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommand) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommand) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.text.xTimerGenericCommand) refers to freertos_evr.o(.text.EvrFreeRTOSTimers_TimerCommandSend) for EvrFreeRTOSTimers_TimerCommandSend
    timers.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to freertos_evr.o(.text.EvrFreeRTOSTimers_PendFuncCallFromIsr) for EvrFreeRTOSTimers_PendFuncCallFromIsr
    timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCall) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCall) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.text.xTimerPendFunctionCall) refers to freertos_evr.o(.text.EvrFreeRTOSTimers_PendFuncCall) for EvrFreeRTOSTimers_PendFuncCall
    timers.o(.ARM.exidx.text.xTimerPendFunctionCall) refers to timers.o(.text.xTimerPendFunctionCall) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers.o(.text.prvGetNextExpireTime) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvGetNextExpireTime) refers to timers.o(.text.prvGetNextExpireTime) for [Anonymous Symbol]
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessTimerOrBlockTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for [Anonymous Symbol]
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessReceivedCommands) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvProcessReceivedCommands) refers to freertos_evr.o(.text.EvrFreeRTOSTimers_TimerExpired) for EvrFreeRTOSTimers_TimerExpired
    timers.o(.text.prvProcessReceivedCommands) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessReceivedCommands) refers to freertos_evr.o(.text.EvrFreeRTOSTimers_TimerCommandReceived) for EvrFreeRTOSTimers_TimerCommandReceived
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.text.prvProcessReceivedCommands) refers to heap_1.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvProcessReceivedCommands) refers to timers.o(.text.prvProcessReceivedCommands) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.text.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.text.prvProcessExpiredTimer) refers to freertos_evr.o(.text.EvrFreeRTOSTimers_TimerExpired) for EvrFreeRTOSTimers_TimerExpired
    timers.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.ARM.exidx.text.prvSwitchTimerLists) refers to timers.o(.text.prvSwitchTimerLists) for [Anonymous Symbol]
    timers.o(.text.prvReloadTimer) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvReloadTimer) refers to freertos_evr.o(.text.EvrFreeRTOSTimers_TimerExpired) for EvrFreeRTOSTimers_TimerExpired
    timers.o(.ARM.exidx.text.prvReloadTimer) refers to timers.o(.text.prvReloadTimer) for [Anonymous Symbol]
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.ARM.exidx.text.prvInsertTimerInActiveList) refers to timers.o(.text.prvInsertTimerInActiveList) for [Anonymous Symbol]
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset.o(.text) refers to rt_memclr.o(.text) for _memset
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_tm4c123.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing adc.o(.text), (0 bytes).
    Removing adc.o(.ARM.exidx.text.adc_init), (8 bytes).
    Removing lcd_config.o(.text), (0 bytes).
    Removing lcd_config.o(.ARM.exidx.text.LCD_command), (8 bytes).
    Removing lcd_config.o(.ARM.exidx.text.delayUs), (8 bytes).
    Removing lcd_config.o(.ARM.exidx.text.delayMs), (8 bytes).
    Removing lcd_config.o(.ARM.exidx.text.LCD_start), (8 bytes).
    Removing lcd_config.o(.ARM.exidx.text.LCD_data), (8 bytes).
    Removing lcd_config.o(.ARM.exidx.text.LCD_clear), (8 bytes).
    Removing lcd_config.o(.ARM.exidx.text.LCD_line), (8 bytes).
    Removing lcd_config.o(.ARM.exidx.text.LCD_display), (8 bytes).
    Removing lcd_config.o(.ARM.exidx.text.toString), (8 bytes).
    Removing lcd_config.o(.ARM.exidx.text.printchar), (8 bytes).
    Removing lcd_config.o(.ARM.exidx.text.print), (8 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main_task), (8 bytes).
    Removing main.o(.ARM.exidx.text.UART_task), (8 bytes).
    Removing main.o(.ARM.exidx.text.LCD_task), (8 bytes).
    Removing main.o(.ARM.exidx.text.ALARM_task), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing dio.o(.text), (0 bytes).
    Removing dio.o(.ARM.exidx.text.GPIO_init), (8 bytes).
    Removing eventrecorder.o(.text), (0 bytes).
    Removing eventrecorder.o(.text.EventRecorderTimerSetup), (36 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerSetup), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderTimerGetFreq), (12 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetFreq), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetCount), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderInitialize), (248 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderInitialize), (8 bytes).
    Removing eventrecorder.o(.text.crc16_ccitt), (72 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.crc16_ccitt), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderEnable), (108 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderEnable), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventGetTS), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecordItem), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderStart), (48 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderStart), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderDisable), (108 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderDisable), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderStop), (44 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderStop), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderClockUpdate), (42 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderClockUpdate), (8 bytes).
    Removing eventrecorder.o(.text.EventRecordData), (274 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecordData), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventCheckFilter), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.GetContext), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecord2), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecord4), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.LockTS_Overflow), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.UnlockTS_Overflow), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.UpdateTS), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.atomic_wr8), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.atomic_wr32), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.GetRecordIndex), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.LockRecord), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.UnlockRecord), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.IncrementRecordsWritten), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.IncrementRecordsDumped), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.atomic_inc32), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.atomic_inc8), (8 bytes).
    Removing system_tm4c123.o(.text), (0 bytes).
    Removing system_tm4c123.o(.text.SystemCoreClockUpdate), (132 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_tm4c123.o(.text.getOscClk), (56 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.getOscClk), (8 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_tm4c123.o(.rodata..Lswitch.table.getOscClk), (92 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSSetup), (116 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSSetup), (8 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskCreate), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_TaskCreateFailed), (16 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskCreateFailed), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_TaskDelete), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskDelete), (8 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskDelayUntil), (8 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskDelay), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_TaskPrioritySet), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskPrioritySet), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_TaskSuspend), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskSuspend), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_TaskResume), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskResume), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_TaskResumeFromIsr), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskResumeFromIsr), (8 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskIncrementTick), (8 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_IncreaseTickCount), (8 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskSwitchedOut), (8 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskSwitchedIn), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_TaskPriorityInherit), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskPriorityInherit), (8 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskPriorityDisinherit), (8 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_MovedTaskToReadyState), (8 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_PostMovedTaskToReadyState), (8 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_LowPowerIdleBegin), (8 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_LowPowerIdleEnd), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyTakeBlock), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskNotifyTakeBlock), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyTake), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskNotifyTake), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyWaitBlock), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskNotifyWaitBlock), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyWait), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskNotifyWait), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotify), (32 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskNotify), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyFromIsr), (32 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskNotifyFromIsr), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTasks_TaskNotifyGiveFromIsr), (34 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTasks_TaskNotifyGiveFromIsr), (8 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueCreate), (8 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueCreateFailed), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_CreateMutex), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_CreateMutex), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_CreateMutexFailed), (16 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_CreateMutexFailed), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_GiveMutexRecursive), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_GiveMutexRecursive), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_GiveMutexRecursiveFailed), (16 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_GiveMutexRecursiveFailed), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_TakeMutexRecursive), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_TakeMutexRecursive), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_TakeMutexRecursiveFailed), (16 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_TakeMutexRecursiveFailed), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_CreateCountingSemaphore), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_CreateCountingSemaphore), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_CreateCountingSemaphoreFailed), (16 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_CreateCountingSemaphoreFailed), (8 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueSend), (8 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueSendFailed), (8 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueReceive), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_QueuePeek), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueuePeek), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_QueuePeekFailed), (16 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueuePeekFailed), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_QueuePeekFromIsr), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueuePeekFromIsr), (8 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueReceiveFailed), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_QueueSendFromIsr), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueSendFromIsr), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_QueueSendFromIsrFailed), (16 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueSendFromIsrFailed), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_QueueReceiveFromIsr), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueReceiveFromIsr), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_QueueReceiveFromIsrFailed), (16 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueReceiveFromIsrFailed), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_QueuePeekFromIsrFailed), (16 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueuePeekFromIsrFailed), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_QueueDelete), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueDelete), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSQueue_QueueRegistryAdd), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_QueueRegistryAdd), (8 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_BlockingOnQueueReceive), (8 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSQueue_BlockingOnQueueSend), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTimers_TimerCreate), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTimers_TimerCreate), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTimers_TimerCreateFailed), (16 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTimers_TimerCreateFailed), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTimers_TimerCommandSend), (32 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTimers_TimerCommandSend), (8 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTimers_TimerCommandReceived), (8 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTimers_TimerExpired), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTimers_PendFuncCall), (32 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTimers_PendFuncCall), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSTimers_PendFuncCallFromIsr), (32 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSTimers_PendFuncCallFromIsr), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupCreate), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupCreate), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupCreateFailed), (16 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupCreateFailed), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupSyncBlock), (34 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupSyncBlock), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupSyncEnd), (32 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupSyncEnd), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupWaitBitsBlock), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupWaitBitsBlock), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupWaitBitsEnd), (34 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupWaitBitsEnd), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupClearBits), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupClearBits), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupClearBitsFromIsr), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupClearBitsFromIsr), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupSetBits), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupSetBits), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupSetBitsFromIsr), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupSetBitsFromIsr), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSEventGroups_EventGroupDelete), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSEventGroups_EventGroupDelete), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferCreateFailed), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferCreateFailed), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferCreateStaticFailed), (16 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferCreateStaticFailed), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferCreate), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferCreate), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferDelete), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferDelete), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferReset), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferReset), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferBlockingOnSend), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferBlockingOnSend), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferSend), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferSend), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferSendFailed), (16 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferSendFailed), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferSendFromIsr), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferSendFromIsr), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferBlockingOnReceive), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferBlockingOnReceive), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferReceive), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferReceive), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferReceiveFailed), (16 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferReceiveFailed), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSStreamBuf_StreamBufferReceiveFromIsr), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSStreamBuf_StreamBufferReceiveFromIsr), (8 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSHeap_Malloc), (8 bytes).
    Removing freertos_evr.o(.text.EvrFreeRTOSHeap_Free), (20 bytes).
    Removing freertos_evr.o(.ARM.exidx.text.EvrFreeRTOSHeap_Free), (8 bytes).
    Removing freertos_evr.o(.bss.EvrFreeRTOSSetup.init), (1 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.text.vListInsertEnd), (28 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (38 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep), (8 bytes).
    Removing port.o(.text.vPortValidateInterruptPriority), (98 bytes).
    Removing port.o(.ARM.exidx.text.vPortValidateInterruptPriority), (8 bytes).
    Removing heap_1.o(.text), (0 bytes).
    Removing heap_1.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_1.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_1.o(.text.vPortInitialiseBlocks), (14 bytes).
    Removing heap_1.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_1.o(.text.xPortGetFreeHeapSize), (18 bytes).
    Removing heap_1.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.text.xQueueCreateMutex), (22 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.text.prvInitialiseMutex), (40 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolder), (46 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolder), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolderFromISR), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (80 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (78 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueSemaphoreTake), (478 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (60 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (326 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (274 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.text.prvGetDisinheritPriorityAfterTimeout), (18 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (394 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (208 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (146 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (38 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (42 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (26 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (38 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (6 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (30 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing queue.o(.text.xQueueCreateSet), (12 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateSet), (8 bytes).
    Removing queue.o(.text.xQueueAddToSet), (38 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueAddToSet), (8 bytes).
    Removing queue.o(.text.xQueueRemoveFromSet), (42 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueRemoveFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSet), (22 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSetFromISR), (22 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR), (8 bytes).
    Removing stream_buffer.o(.text), (0 bytes).
    Removing stream_buffer.o(.text.xStreamBufferGenericCreate), (166 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferGenericCreate), (8 bytes).
    Removing stream_buffer.o(.text.prvInitialiseNewStreamBuffer), (48 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvInitialiseNewStreamBuffer), (8 bytes).
    Removing stream_buffer.o(.text.vStreamBufferDelete), (52 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.vStreamBufferDelete), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReset), (90 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReset), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSetTriggerLevel), (42 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSetTriggerLevel), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSpacesAvailable), (58 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSpacesAvailable), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferBytesAvailable), (30 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferBytesAvailable), (8 bytes).
    Removing stream_buffer.o(.text.prvBytesInBuffer), (18 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvBytesInBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSend), (342 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSend), (8 bytes).
    Removing stream_buffer.o(.text.prvWriteMessageToBuffer), (80 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvWriteMessageToBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSendFromISR), (174 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSendFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceive), (244 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceive), (8 bytes).
    Removing stream_buffer.o(.text.prvReadMessageFromBuffer), (70 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvReadMessageFromBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes), (90 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferNextMessageLengthBytes), (8 bytes).
    Removing stream_buffer.o(.text.prvReadBytesFromBuffer), (100 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvReadBytesFromBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceiveFromISR), (168 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferIsEmpty), (34 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferIsEmpty), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferIsFull), (46 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferIsFull), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSendCompletedFromISR), (86 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSendCompletedFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR), (86 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveCompletedFromISR), (8 bytes).
    Removing stream_buffer.o(.text.uxStreamBufferGetStreamBufferNumber), (4 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.uxStreamBufferGetStreamBufferNumber), (8 bytes).
    Removing stream_buffer.o(.text.vStreamBufferSetStreamBufferNumber), (4 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.vStreamBufferSetStreamBufferNumber), (8 bytes).
    Removing stream_buffer.o(.text.ucStreamBufferGetStreamBufferType), (8 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.ucStreamBufferGetStreamBufferType), (8 bytes).
    Removing stream_buffer.o(.text.prvWriteBytesToBuffer), (124 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvWriteBytesToBuffer), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (258 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.text.xTaskDelayUntil), (202 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (156 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (30 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (278 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (256 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (182 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.prvTaskIsTaskSuspended), (50 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (228 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (36 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (18 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (38 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.xTaskGetHandle), (168 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetHandle), (8 bytes).
    Removing tasks.o(.text.prvSearchForNameWithinSingleList), (106 bytes).
    Removing tasks.o(.ARM.exidx.text.prvSearchForNameWithinSingleList), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (192 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (100 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.xTaskGetIdleTaskHandle), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStepTick), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (60 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.text.xTaskAbortDelay), (192 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskAbortDelay), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (138 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (242 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (58 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (10 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (126 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.prvTaskCheckFreeStackSpace), (32 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark2), (22 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark), (22 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.text.xTaskPriorityInherit), (218 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.text.vTaskPriorityDisinheritAfterTimeout), (230 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (26 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.text.pvTaskIncrementMutexHeldCount), (24 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (172 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (206 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (394 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (458 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (338 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (66 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (44 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvGetExpectedIdleTime), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (56 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.prvInitialiseNewTimer), (90 bytes).
    Removing timers.o(.ARM.exidx.text.prvInitialiseNewTimer), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommand), (116 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (34 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (26 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (58 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (46 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (26 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (26 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (46 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (38 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (38 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCallFromISR), (62 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCall), (86 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCall), (8 bytes).
    Removing timers.o(.text.uxTimerGetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvGetNextExpireTime), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessReceivedCommands), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSwitchTimerLists), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvReloadTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvInsertTimerInActiveList), (8 bytes).

526 unused section(s) (total 16411 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strlen.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ADC.c                                    0x00000000   Number         0  adc.o ABSOLUTE
    Dio.c                                    0x00000000   Number         0  dio.o ABSOLUTE
    EventRecorder.c                          0x00000000   Number         0  eventrecorder.o ABSOLUTE
    LCD_config.c                             0x00000000   Number         0  lcd_config.o ABSOLUTE
    RTE/Device/TM4C123GH6PM/startup_TM4C123.s 0x00000000   Number         0  startup_tm4c123.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    heap_1.c                                 0x00000000   Number         0  heap_1.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    stream_buffer.c                          0x00000000   Number         0  stream_buffer.o ABSOLUTE
    system_TM4C123.c                         0x00000000   Number         0  system_tm4c123.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    RESET                                    0x00000000   Section      620  startup_tm4c123.o(RESET)
    !!!main                                  0x0000026c   Section        8  __main.o(!!!main)
    !!!scatter                               0x00000274   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x000002a8   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x000002c4   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x000002e0   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x000002e2   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x000002e6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x000002e6   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x000002e8   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x000002ea   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x000002ea   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x000002ec   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x000002ec   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x000002ec   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x000002f2   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x000002f2   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x000002f6   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x000002f6   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x000002fe   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000300   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000300   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000304   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    $v0                                      0x0000030c   Number         0  startup_tm4c123.o(.text)
    .text                                    0x0000030c   Section      276  startup_tm4c123.o(.text)
    .text                                    0x00000420   Section        0  strlen.o(.text)
    .text                                    0x0000045e   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x000004e8   Section       16  aeabi_memset.o(.text)
    .text                                    0x000004f8   Section       16  aeabi_memset4.o(.text)
    .text                                    0x00000508   Section       68  rt_memclr.o(.text)
    .text                                    0x0000054c   Section       78  rt_memclr_w.o(.text)
    .text                                    0x0000059a   Section        0  heapauxi.o(.text)
    .text                                    0x000005a0   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x00000604   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x0000064e   Section        0  exit.o(.text)
    .text                                    0x00000660   Section        8  libspace.o(.text)
    .text                                    0x00000668   Section        0  sys_exit.o(.text)
    .text                                    0x00000674   Section        2  use_no_semi.o(.text)
    .text                                    0x00000676   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x00000678   Section        0  main.o(.text.ALARM_task)
    EventCheckFilter                         0x000006b1   Thumb Code    46  eventrecorder.o(.text.EventCheckFilter)
    [Anonymous Symbol]                       0x000006b0   Section        0  eventrecorder.o(.text.EventCheckFilter)
    EventGetTS                               0x000006e1   Thumb Code    58  eventrecorder.o(.text.EventGetTS)
    [Anonymous Symbol]                       0x000006e0   Section        0  eventrecorder.o(.text.EventGetTS)
    [Anonymous Symbol]                       0x0000071c   Section        0  eventrecorder.o(.text.EventRecord2)
    [Anonymous Symbol]                       0x00000754   Section        0  eventrecorder.o(.text.EventRecord4)
    EventRecordItem                          0x000007bd   Thumb Code   172  eventrecorder.o(.text.EventRecordItem)
    [Anonymous Symbol]                       0x000007bc   Section        0  eventrecorder.o(.text.EventRecordItem)
    [Anonymous Symbol]                       0x00000868   Section        0  eventrecorder.o(.text.EventRecorderTimerGetCount)
    [Anonymous Symbol]                       0x00000874   Section        0  freertos_evr.o(.text.EvrFreeRTOSHeap_Malloc)
    [Anonymous Symbol]                       0x00000884   Section        0  freertos_evr.o(.text.EvrFreeRTOSQueue_BlockingOnQueueReceive)
    [Anonymous Symbol]                       0x00000898   Section        0  freertos_evr.o(.text.EvrFreeRTOSQueue_BlockingOnQueueSend)
    [Anonymous Symbol]                       0x000008ac   Section        0  freertos_evr.o(.text.EvrFreeRTOSQueue_QueueCreate)
    [Anonymous Symbol]                       0x000008c0   Section        0  freertos_evr.o(.text.EvrFreeRTOSQueue_QueueCreateFailed)
    [Anonymous Symbol]                       0x000008d0   Section        0  freertos_evr.o(.text.EvrFreeRTOSQueue_QueueReceive)
    [Anonymous Symbol]                       0x000008e4   Section        0  freertos_evr.o(.text.EvrFreeRTOSQueue_QueueReceiveFailed)
    [Anonymous Symbol]                       0x000008f4   Section        0  freertos_evr.o(.text.EvrFreeRTOSQueue_QueueSend)
    [Anonymous Symbol]                       0x00000908   Section        0  freertos_evr.o(.text.EvrFreeRTOSQueue_QueueSendFailed)
    [Anonymous Symbol]                       0x00000918   Section        0  freertos_evr.o(.text.EvrFreeRTOSTasks_IncreaseTickCount)
    [Anonymous Symbol]                       0x0000092c   Section        0  freertos_evr.o(.text.EvrFreeRTOSTasks_LowPowerIdleBegin)
    [Anonymous Symbol]                       0x00000940   Section        0  freertos_evr.o(.text.EvrFreeRTOSTasks_LowPowerIdleEnd)
    [Anonymous Symbol]                       0x00000954   Section        0  freertos_evr.o(.text.EvrFreeRTOSTasks_MovedTaskToReadyState)
    [Anonymous Symbol]                       0x00000968   Section        0  freertos_evr.o(.text.EvrFreeRTOSTasks_PostMovedTaskToReadyState)
    [Anonymous Symbol]                       0x0000097c   Section        0  freertos_evr.o(.text.EvrFreeRTOSTasks_TaskCreate)
    [Anonymous Symbol]                       0x0000098c   Section        0  freertos_evr.o(.text.EvrFreeRTOSTasks_TaskDelay)
    [Anonymous Symbol]                       0x000009a0   Section        0  freertos_evr.o(.text.EvrFreeRTOSTasks_TaskDelayUntil)
    [Anonymous Symbol]                       0x000009b4   Section        0  freertos_evr.o(.text.EvrFreeRTOSTasks_TaskIncrementTick)
    [Anonymous Symbol]                       0x000009c8   Section        0  freertos_evr.o(.text.EvrFreeRTOSTasks_TaskPriorityDisinherit)
    [Anonymous Symbol]                       0x000009dc   Section        0  freertos_evr.o(.text.EvrFreeRTOSTasks_TaskSwitchedIn)
    [Anonymous Symbol]                       0x000009f0   Section        0  freertos_evr.o(.text.EvrFreeRTOSTasks_TaskSwitchedOut)
    [Anonymous Symbol]                       0x00000a04   Section        0  freertos_evr.o(.text.EvrFreeRTOSTimers_TimerCommandReceived)
    [Anonymous Symbol]                       0x00000a28   Section        0  freertos_evr.o(.text.EvrFreeRTOSTimers_TimerExpired)
    [Anonymous Symbol]                       0x00000a3c   Section        0  dio.o(.text.GPIO_init)
    GetContext                               0x00000afd   Thumb Code     8  eventrecorder.o(.text.GetContext)
    [Anonymous Symbol]                       0x00000afc   Section        0  eventrecorder.o(.text.GetContext)
    GetRecordIndex                           0x00000b05   Thumb Code    18  eventrecorder.o(.text.GetRecordIndex)
    [Anonymous Symbol]                       0x00000b04   Section        0  eventrecorder.o(.text.GetRecordIndex)
    IncrementRecordsDumped                   0x00000b19   Thumb Code    18  eventrecorder.o(.text.IncrementRecordsDumped)
    [Anonymous Symbol]                       0x00000b18   Section        0  eventrecorder.o(.text.IncrementRecordsDumped)
    IncrementRecordsWritten                  0x00000b2d   Thumb Code    18  eventrecorder.o(.text.IncrementRecordsWritten)
    [Anonymous Symbol]                       0x00000b2c   Section        0  eventrecorder.o(.text.IncrementRecordsWritten)
    [Anonymous Symbol]                       0x00000b40   Section        0  lcd_config.o(.text.LCD_clear)
    [Anonymous Symbol]                       0x00000b4c   Section        0  lcd_config.o(.text.LCD_command)
    [Anonymous Symbol]                       0x00000b88   Section        0  lcd_config.o(.text.LCD_data)
    [Anonymous Symbol]                       0x00000bb8   Section        0  lcd_config.o(.text.LCD_display)
    [Anonymous Symbol]                       0x00000bdc   Section        0  lcd_config.o(.text.LCD_line)
    [Anonymous Symbol]                       0x00000bf8   Section        0  lcd_config.o(.text.LCD_start)
    [Anonymous Symbol]                       0x00000c6c   Section        0  main.o(.text.LCD_task)
    LockRecord                               0x00000ce5   Thumb Code    36  eventrecorder.o(.text.LockRecord)
    [Anonymous Symbol]                       0x00000ce4   Section        0  eventrecorder.o(.text.LockRecord)
    LockTS_Overflow                          0x00000d09   Thumb Code    10  eventrecorder.o(.text.LockTS_Overflow)
    [Anonymous Symbol]                       0x00000d08   Section        0  eventrecorder.o(.text.LockTS_Overflow)
    [Anonymous Symbol]                       0x00000d20   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x00000d80   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x00000d90   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x00000db0   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x00000db4   Section        0  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x00000de4   Section        0  system_tm4c123.o(.text.SystemInit)
    [Anonymous Symbol]                       0x00000e54   Section        0  main.o(.text.UART_task)
    UnlockRecord                             0x00000ef1   Thumb Code    32  eventrecorder.o(.text.UnlockRecord)
    [Anonymous Symbol]                       0x00000ef0   Section        0  eventrecorder.o(.text.UnlockRecord)
    UnlockTS_Overflow                        0x00000f11   Thumb Code    10  eventrecorder.o(.text.UnlockTS_Overflow)
    [Anonymous Symbol]                       0x00000f10   Section        0  eventrecorder.o(.text.UnlockTS_Overflow)
    UpdateTS                                 0x00000f1d   Thumb Code     8  eventrecorder.o(.text.UpdateTS)
    [Anonymous Symbol]                       0x00000f1c   Section        0  eventrecorder.o(.text.UpdateTS)
    [Anonymous Symbol]                       0x00000f24   Section        0  adc.o(.text.adc_init)
    atomic_inc32                             0x00000f99   Thumb Code    18  eventrecorder.o(.text.atomic_inc32)
    [Anonymous Symbol]                       0x00000f98   Section        0  eventrecorder.o(.text.atomic_inc32)
    atomic_inc8                              0x00000fad   Thumb Code    28  eventrecorder.o(.text.atomic_inc8)
    [Anonymous Symbol]                       0x00000fac   Section        0  eventrecorder.o(.text.atomic_inc8)
    atomic_wr32                              0x00000fc9   Thumb Code    28  eventrecorder.o(.text.atomic_wr32)
    [Anonymous Symbol]                       0x00000fc8   Section        0  eventrecorder.o(.text.atomic_wr32)
    atomic_wr8                               0x00000fe5   Thumb Code    24  eventrecorder.o(.text.atomic_wr8)
    [Anonymous Symbol]                       0x00000fe4   Section        0  eventrecorder.o(.text.atomic_wr8)
    [Anonymous Symbol]                       0x00000ffc   Section        0  lcd_config.o(.text.delayMs)
    [Anonymous Symbol]                       0x00001044   Section        0  lcd_config.o(.text.delayUs)
    [Anonymous Symbol]                       0x00001074   Section        0  tasks.o(.text.eTaskConfirmSleepModeStatus)
    [Anonymous Symbol]                       0x000010bc   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x000011b0   Section        0  main.o(.text.main_task)
    [Anonymous Symbol]                       0x0000129c   Section        0  lcd_config.o(.text.print)
    [Anonymous Symbol]                       0x000012b8   Section        0  lcd_config.o(.text.printchar)
    prvAddCurrentTaskToDelayedList           0x000012cd   Thumb Code   198  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x000012cc   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x00001395   Thumb Code   224  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x00001394   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckForValidListAndQueue             0x00001475   Thumb Code    90  timers.o(.text.prvCheckForValidListAndQueue)
    [Anonymous Symbol]                       0x00001474   Section        0  timers.o(.text.prvCheckForValidListAndQueue)
    prvCheckTasksWaitingTermination          0x000014d1   Thumb Code    78  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x000014d0   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x00001521   Thumb Code    38  queue.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x00001520   Section        0  queue.o(.text.prvCopyDataFromQueue)
    prvCopyDataToQueue                       0x00001549   Thumb Code   122  queue.o(.text.prvCopyDataToQueue)
    [Anonymous Symbol]                       0x00001548   Section        0  queue.o(.text.prvCopyDataToQueue)
    prvDeleteTCB                             0x000015c5   Thumb Code    18  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x000015c4   Section        0  tasks.o(.text.prvDeleteTCB)
    prvGetExpectedIdleTime                   0x000015d9   Thumb Code    68  tasks.o(.text.prvGetExpectedIdleTime)
    [Anonymous Symbol]                       0x000015d8   Section        0  tasks.o(.text.prvGetExpectedIdleTime)
    prvGetNextExpireTime                     0x0000161d   Thumb Code    32  timers.o(.text.prvGetNextExpireTime)
    [Anonymous Symbol]                       0x0000161c   Section        0  timers.o(.text.prvGetNextExpireTime)
    prvIdleTask                              0x0000163d   Thumb Code   130  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x0000163c   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseNewQueue                    0x000016c1   Thumb Code    42  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x000016c0   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x000016ed   Thumb Code   170  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x000016ec   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x00001799   Thumb Code   110  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x00001798   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvInsertTimerInActiveList               0x00001809   Thumb Code    64  timers.o(.text.prvInsertTimerInActiveList)
    [Anonymous Symbol]                       0x00001808   Section        0  timers.o(.text.prvInsertTimerInActiveList)
    prvIsQueueEmpty                          0x00001849   Thumb Code    24  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x00001848   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvIsQueueFull                           0x00001861   Thumb Code    28  queue.o(.text.prvIsQueueFull)
    [Anonymous Symbol]                       0x00001860   Section        0  queue.o(.text.prvIsQueueFull)
    prvNotifyQueueSetContainer               0x0000187d   Thumb Code   150  queue.o(.text.prvNotifyQueueSetContainer)
    [Anonymous Symbol]                       0x0000187c   Section        0  queue.o(.text.prvNotifyQueueSetContainer)
    prvPortStartFirstTask                    0x00001915   Thumb Code    40  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x00001914   Section        0  port.o(.text.prvPortStartFirstTask)
    prvProcessExpiredTimer                   0x0000193d   Thumb Code    68  timers.o(.text.prvProcessExpiredTimer)
    [Anonymous Symbol]                       0x0000193c   Section        0  timers.o(.text.prvProcessExpiredTimer)
    prvProcessReceivedCommands               0x00001981   Thumb Code   290  timers.o(.text.prvProcessReceivedCommands)
    [Anonymous Symbol]                       0x00001980   Section        0  timers.o(.text.prvProcessReceivedCommands)
    prvProcessTimerOrBlockTask               0x00001aa5   Thumb Code   128  timers.o(.text.prvProcessTimerOrBlockTask)
    [Anonymous Symbol]                       0x00001aa4   Section        0  timers.o(.text.prvProcessTimerOrBlockTask)
    prvReloadTimer                           0x00001b25   Thumb Code    64  timers.o(.text.prvReloadTimer)
    [Anonymous Symbol]                       0x00001b24   Section        0  timers.o(.text.prvReloadTimer)
    prvResetNextTaskUnblockTime              0x00001b65   Thumb Code    38  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x00001b64   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvSampleTimeNow                         0x00001b8d   Thumb Code    42  timers.o(.text.prvSampleTimeNow)
    [Anonymous Symbol]                       0x00001b8c   Section        0  timers.o(.text.prvSampleTimeNow)
    prvSwitchTimerLists                      0x00001bb9   Thumb Code    52  timers.o(.text.prvSwitchTimerLists)
    [Anonymous Symbol]                       0x00001bb8   Section        0  timers.o(.text.prvSwitchTimerLists)
    prvTaskExitError                         0x00001bed   Thumb Code    50  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x00001bec   Section        0  port.o(.text.prvTaskExitError)
    prvTimerTask                             0x00001c21   Thumb Code    22  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x00001c20   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x00001c39   Thumb Code   134  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00001c38   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00001cc0   Section        0  heap_1.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x00001d34   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x00001d5c   Section        0  lcd_config.o(.text.toString)
    [Anonymous Symbol]                       0x00001dc8   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x00001dec   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x00001e04   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x00001e0c   Section        0  list.o(.text.vListInsert)
    vPortEnableVFP                           0x00001e49   Thumb Code    20  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x00001e48   Section        0  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x00001e5c   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x00001ea4   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x00001ed4   Section        0  heap_1.o(.text.vPortFree)
    [Anonymous Symbol]                       0x00001ef0   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x00001f54   Section        0  port.o(.text.vPortSuppressTicksAndSleep)
    [Anonymous Symbol]                       0x00002068   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x000020ac   Section        0  tasks.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x00002108   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x00002124   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x00002134   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x00002168   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x000021d8   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x0000228c   Section        0  tasks.o(.text.vTaskStepTick)
    [Anonymous Symbol]                       0x000022c8   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x000022d8   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x000022d8   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x00002370   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x00002484   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x000024dc   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x00002590   Section        0  queue.o(.text.xQueueGenericSend)
    [Anonymous Symbol]                       0x00002778   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x00002918   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x000029c0   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x00002a20   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x00002a48   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x00002a54   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x00002c04   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x00002cdc   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x00002dd8   Section        0  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x00002f60   Section        0  timers.o(.text.xTimerCreateTimerTask)
    $v0                                      0x00002fc0   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x00002fc0   Section       26  fpinit.o(x$fpl$fpinit)
    __tagsym$$used.0                         0x00002fdc   Number         0  eventrecorder.o(.rodata.EventRecorderInfo)
    .L.str.3                                 0x00002ff4   Data           4  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00002ff4   Section        0  main.o(.rodata.str1.1)
    uxCriticalNesting                        0x20000004   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000004   Section        0  port.o(.data.uxCriticalNesting)
    .bss                                     0x20000040   Section       96  libspace.o(.bss)
    TS_OverflowLock                          0x200000a0   Data           1  eventrecorder.o(.bss.TS_OverflowLock)
    [Anonymous Symbol]                       0x200000a0   Section        0  eventrecorder.o(.bss.TS_OverflowLock)
    EventBuffer                              0x200000c0   Data        1024  eventrecorder.o(.bss.noinit)
    [Anonymous Symbol]                       0x200000c0   Section        0  eventrecorder.o(.bss.noinit)
    EventFilter                              0x200004c0   Data         128  eventrecorder.o(.bss.noinit)
    EventStatus                              0x20000540   Data          36  eventrecorder.o(.bss.noinit)
    prvSampleTimeNow.xLastTime               0x20000564   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x20000564   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    pvPortMalloc.pucAlignedHeap              0x20000568   Data           4  heap_1.o(.bss.pvPortMalloc.pucAlignedHeap)
    [Anonymous Symbol]                       0x20000568   Section        0  heap_1.o(.bss.pvPortMalloc.pucAlignedHeap)
    pxCurrentTimerList                       0x20000570   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x20000570   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x20000574   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x20000574   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxOverflowDelayedTaskList                0x20000578   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x20000578   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x2000057c   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x2000057c   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x20000580   Data         100  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x20000580   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x200005e4   Data       10000  heap_1.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x200005e4   Section        0  heap_1.o(.bss.ucHeap)
    ucMaxSysCallPriority                     0x20002cf4   Data           1  port.o(.bss.ucMaxSysCallPriority)
    [Anonymous Symbol]                       0x20002cf4   Section        0  port.o(.bss.ucMaxSysCallPriority)
    ulMaxPRIGROUPValue                       0x20002cf8   Data           4  port.o(.bss.ulMaxPRIGROUPValue)
    [Anonymous Symbol]                       0x20002cf8   Section        0  port.o(.bss.ulMaxPRIGROUPValue)
    ulStoppedTimerCompensation               0x20002cfc   Data           1  port.o(.bss.ulStoppedTimerCompensation)
    [Anonymous Symbol]                       0x20002cfc   Section        0  port.o(.bss.ulStoppedTimerCompensation)
    ulTimerCountsForOneTick                  0x20002d00   Data           4  port.o(.bss.ulTimerCountsForOneTick)
    [Anonymous Symbol]                       0x20002d00   Section        0  port.o(.bss.ulTimerCountsForOneTick)
    uxCurrentNumberOfTasks                   0x20002d04   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x20002d04   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x20002d08   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x20002d08   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x20002d0c   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x20002d0c   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x20002d10   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x20002d10   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x20002d14   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20002d14   Section        0  tasks.o(.bss.uxTopReadyPriority)
    xActiveTimerList1                        0x20002d18   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x20002d18   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x20002d2c   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x20002d2c   Section        0  timers.o(.bss.xActiveTimerList2)
    xAlarmQueue                              0x20002d40   Data           4  main.o(.bss.xAlarmQueue)
    [Anonymous Symbol]                       0x20002d40   Section        0  main.o(.bss.xAlarmQueue)
    xDelayedTaskList1                        0x20002d44   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x20002d44   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x20002d58   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x20002d58   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xIdleTaskHandle                          0x20002d6c   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x20002d6c   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xLCDQueue                                0x20002d70   Data           4  main.o(.bss.xLCDQueue)
    [Anonymous Symbol]                       0x20002d70   Section        0  main.o(.bss.xLCDQueue)
    xMaximumPossibleSuppressedTicks          0x20002d74   Data           4  port.o(.bss.xMaximumPossibleSuppressedTicks)
    [Anonymous Symbol]                       0x20002d74   Section        0  port.o(.bss.xMaximumPossibleSuppressedTicks)
    xNextFreeByte                            0x20002d78   Data           4  heap_1.o(.bss.xNextFreeByte)
    [Anonymous Symbol]                       0x20002d78   Section        0  heap_1.o(.bss.xNextFreeByte)
    xNextTaskUnblockTime                     0x20002d7c   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x20002d7c   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x20002d80   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x20002d80   Section        0  tasks.o(.bss.xNumOfOverflows)
    xPendedTicks                             0x20002d84   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x20002d84   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x20002d88   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x20002d88   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x20002d9c   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x20002d9c   Section        0  tasks.o(.bss.xSchedulerRunning)
    xSuspendedTaskList                       0x20002da0   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20002da0   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x20002db4   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20002db4   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x20002dc8   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20002dc8   Section        0  tasks.o(.bss.xTickCount)
    xTimerQueue                              0x20002dcc   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x20002dcc   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x20002dd0   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x20002dd0   Section        0  timers.o(.bss.xTimerTaskHandle)
    xUARTQueue                               0x20002dd4   Data           4  main.o(.bss.xUARTQueue)
    [Anonymous Symbol]                       0x20002dd4   Section        0  main.o(.bss.xUARTQueue)
    xYieldPending                            0x20002dd8   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20002dd8   Section        0  tasks.o(.bss.xYieldPending)
    Heap_Mem                                 0x20002de0   Data           0  startup_tm4c123.o(HEAP)
    Stack_Mem                                0x20002de0   Data         512  startup_tm4c123.o(STACK)
    HEAP                                     0x20002de0   Section        0  startup_tm4c123.o(HEAP)
    STACK                                    0x20002de0   Section      512  startup_tm4c123.o(STACK)
    __initial_sp                             0x20002fe0   Data           0  startup_tm4c123.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_tm4c123.o(RESET)
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_End                            0x0000026c   Data           0  startup_tm4c123.o(RESET)
    __Vectors_Size                           0x0000026c   Number         0  startup_tm4c123.o ABSOLUTE
    __main                                   0x0000026d   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x00000275   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x00000283   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x000002a9   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x000002c5   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x000002e1   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x000002e3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_alloca_1                   0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_trap_1                  0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x000002e7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x000002e9   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x000002eb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x000002ed   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x000002ed   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x000002ed   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x000002f3   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x000002f3   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x000002f7   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x000002f7   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x000002ff   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000301   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000301   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000305   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x0000030d   Thumb Code     8  startup_tm4c123.o(.text)
    NMI_Handler                              0x00000315   Thumb Code     2  startup_tm4c123.o(.text)
    HardFault_Handler                        0x00000317   Thumb Code     2  startup_tm4c123.o(.text)
    MemManage_Handler                        0x00000319   Thumb Code     2  startup_tm4c123.o(.text)
    BusFault_Handler                         0x0000031b   Thumb Code     2  startup_tm4c123.o(.text)
    UsageFault_Handler                       0x0000031d   Thumb Code     2  startup_tm4c123.o(.text)
    DebugMon_Handler                         0x00000321   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOA_Handler                            0x00000327   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOB_Handler                            0x00000329   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOC_Handler                            0x0000032b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOD_Handler                            0x0000032d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOE_Handler                            0x0000032f   Thumb Code     2  startup_tm4c123.o(.text)
    UART0_Handler                            0x00000331   Thumb Code     2  startup_tm4c123.o(.text)
    UART1_Handler                            0x00000333   Thumb Code     2  startup_tm4c123.o(.text)
    SSI0_Handler                             0x00000335   Thumb Code     2  startup_tm4c123.o(.text)
    I2C0_Handler                             0x00000337   Thumb Code     2  startup_tm4c123.o(.text)
    PMW0_FAULT_Handler                       0x00000339   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_0_Handler                           0x0000033b   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_1_Handler                           0x0000033d   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_2_Handler                           0x0000033f   Thumb Code     2  startup_tm4c123.o(.text)
    QEI0_Handler                             0x00000341   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS0_Handler                          0x00000343   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS1_Handler                          0x00000345   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS2_Handler                          0x00000347   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS3_Handler                          0x00000349   Thumb Code     2  startup_tm4c123.o(.text)
    WDT0_Handler                             0x0000034b   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0A_Handler                          0x0000034d   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0B_Handler                          0x0000034f   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1A_Handler                          0x00000351   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1B_Handler                          0x00000353   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2A_Handler                          0x00000355   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2B_Handler                          0x00000357   Thumb Code     2  startup_tm4c123.o(.text)
    COMP0_Handler                            0x00000359   Thumb Code     2  startup_tm4c123.o(.text)
    COMP1_Handler                            0x0000035b   Thumb Code     2  startup_tm4c123.o(.text)
    COMP2_Handler                            0x0000035d   Thumb Code     2  startup_tm4c123.o(.text)
    SYSCTL_Handler                           0x0000035f   Thumb Code     2  startup_tm4c123.o(.text)
    FLASH_Handler                            0x00000361   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOF_Handler                            0x00000363   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOG_Handler                            0x00000365   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOH_Handler                            0x00000367   Thumb Code     2  startup_tm4c123.o(.text)
    UART2_Handler                            0x00000369   Thumb Code     2  startup_tm4c123.o(.text)
    SSI1_Handler                             0x0000036b   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3A_Handler                          0x0000036d   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3B_Handler                          0x0000036f   Thumb Code     2  startup_tm4c123.o(.text)
    I2C1_Handler                             0x00000371   Thumb Code     2  startup_tm4c123.o(.text)
    QEI1_Handler                             0x00000373   Thumb Code     2  startup_tm4c123.o(.text)
    CAN0_Handler                             0x00000375   Thumb Code     2  startup_tm4c123.o(.text)
    CAN1_Handler                             0x00000377   Thumb Code     2  startup_tm4c123.o(.text)
    CAN2_Handler                             0x00000379   Thumb Code     2  startup_tm4c123.o(.text)
    HIB_Handler                              0x0000037b   Thumb Code     2  startup_tm4c123.o(.text)
    USB0_Handler                             0x0000037d   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_3_Handler                           0x0000037f   Thumb Code     2  startup_tm4c123.o(.text)
    UDMA_Handler                             0x00000381   Thumb Code     2  startup_tm4c123.o(.text)
    UDMAERR_Handler                          0x00000383   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS0_Handler                          0x00000385   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS1_Handler                          0x00000387   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS2_Handler                          0x00000389   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS3_Handler                          0x0000038b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOJ_Handler                            0x0000038d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOK_Handler                            0x0000038f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOL_Handler                            0x00000391   Thumb Code     2  startup_tm4c123.o(.text)
    SSI2_Handler                             0x00000393   Thumb Code     2  startup_tm4c123.o(.text)
    SSI3_Handler                             0x00000395   Thumb Code     2  startup_tm4c123.o(.text)
    UART3_Handler                            0x00000397   Thumb Code     2  startup_tm4c123.o(.text)
    UART4_Handler                            0x00000399   Thumb Code     2  startup_tm4c123.o(.text)
    UART5_Handler                            0x0000039b   Thumb Code     2  startup_tm4c123.o(.text)
    UART6_Handler                            0x0000039d   Thumb Code     2  startup_tm4c123.o(.text)
    UART7_Handler                            0x0000039f   Thumb Code     2  startup_tm4c123.o(.text)
    I2C2_Handler                             0x000003a1   Thumb Code     2  startup_tm4c123.o(.text)
    I2C3_Handler                             0x000003a3   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4A_Handler                          0x000003a5   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4B_Handler                          0x000003a7   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5A_Handler                          0x000003a9   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5B_Handler                          0x000003ab   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0A_Handler                         0x000003ad   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0B_Handler                         0x000003af   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1A_Handler                         0x000003b1   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1B_Handler                         0x000003b3   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2A_Handler                         0x000003b5   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2B_Handler                         0x000003b7   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3A_Handler                         0x000003b9   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3B_Handler                         0x000003bb   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4A_Handler                         0x000003bd   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4B_Handler                         0x000003bf   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5A_Handler                         0x000003c1   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5B_Handler                         0x000003c3   Thumb Code     2  startup_tm4c123.o(.text)
    FPU_Handler                              0x000003c5   Thumb Code     2  startup_tm4c123.o(.text)
    I2C4_Handler                             0x000003c7   Thumb Code     2  startup_tm4c123.o(.text)
    I2C5_Handler                             0x000003c9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOM_Handler                            0x000003cb   Thumb Code     2  startup_tm4c123.o(.text)
    GPION_Handler                            0x000003cd   Thumb Code     2  startup_tm4c123.o(.text)
    QEI2_Handler                             0x000003cf   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP0_Handler                           0x000003d1   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP1_Handler                           0x000003d3   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP2_Handler                           0x000003d5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP3_Handler                           0x000003d7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP4_Handler                           0x000003d9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP5_Handler                           0x000003db   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP6_Handler                           0x000003dd   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP7_Handler                           0x000003df   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ0_Handler                           0x000003e1   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ1_Handler                           0x000003e3   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ2_Handler                           0x000003e5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ3_Handler                           0x000003e7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ4_Handler                           0x000003e9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ5_Handler                           0x000003eb   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ6_Handler                           0x000003ed   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ7_Handler                           0x000003ef   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOR_Handler                            0x000003f1   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOS_Handler                            0x000003f3   Thumb Code     2  startup_tm4c123.o(.text)
    PMW1_0_Handler                           0x000003f5   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_1_Handler                           0x000003f7   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_2_Handler                           0x000003f9   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_3_Handler                           0x000003fb   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_FAULT_Handler                       0x000003fd   Thumb Code     2  startup_tm4c123.o(.text)
    __user_initial_stackheap                 0x00000401   Thumb Code     0  startup_tm4c123.o(.text)
    strlen                                   0x00000421   Thumb Code    62  strlen.o(.text)
    __aeabi_memcpy                           0x0000045f   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x0000045f   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x000004c5   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset                           0x000004e9   Thumb Code    16  aeabi_memset.o(.text)
    __aeabi_memset4                          0x000004f9   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x000004f9   Thumb Code     0  aeabi_memset4.o(.text)
    __aeabi_memclr                           0x00000509   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x00000509   Thumb Code     0  rt_memclr.o(.text)
    _memset                                  0x0000050d   Thumb Code    64  rt_memclr.o(.text)
    __aeabi_memclr4                          0x0000054d   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x0000054d   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x0000054d   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x00000551   Thumb Code    74  rt_memclr_w.o(.text)
    __use_two_region_memory                  0x0000059b   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x0000059d   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x0000059f   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x000005a1   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x000005a1   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x000005a1   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x000005e9   Thumb Code     0  rt_memcpy_w.o(.text)
    __user_setup_stackheap                   0x00000605   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x0000064f   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x00000661   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x00000661   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x00000661   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x00000669   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x00000675   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x00000675   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x00000677   Thumb Code     0  indicate_semi.o(.text)
    ALARM_task                               0x00000679   Thumb Code    54  main.o(.text.ALARM_task)
    EventRecord2                             0x0000071d   Thumb Code    54  eventrecorder.o(.text.EventRecord2)
    EventRecord4                             0x00000755   Thumb Code   104  eventrecorder.o(.text.EventRecord4)
    EventRecorderTimerGetCount               0x00000869   Thumb Code    12  eventrecorder.o(.text.EventRecorderTimerGetCount)
    EvrFreeRTOSHeap_Malloc                   0x00000875   Thumb Code    16  freertos_evr.o(.text.EvrFreeRTOSHeap_Malloc)
    EvrFreeRTOSQueue_BlockingOnQueueReceive  0x00000885   Thumb Code    20  freertos_evr.o(.text.EvrFreeRTOSQueue_BlockingOnQueueReceive)
    EvrFreeRTOSQueue_BlockingOnQueueSend     0x00000899   Thumb Code    20  freertos_evr.o(.text.EvrFreeRTOSQueue_BlockingOnQueueSend)
    EvrFreeRTOSQueue_QueueCreate             0x000008ad   Thumb Code    20  freertos_evr.o(.text.EvrFreeRTOSQueue_QueueCreate)
    EvrFreeRTOSQueue_QueueCreateFailed       0x000008c1   Thumb Code    16  freertos_evr.o(.text.EvrFreeRTOSQueue_QueueCreateFailed)
    EvrFreeRTOSQueue_QueueReceive            0x000008d1   Thumb Code    20  freertos_evr.o(.text.EvrFreeRTOSQueue_QueueReceive)
    EvrFreeRTOSQueue_QueueReceiveFailed      0x000008e5   Thumb Code    16  freertos_evr.o(.text.EvrFreeRTOSQueue_QueueReceiveFailed)
    EvrFreeRTOSQueue_QueueSend               0x000008f5   Thumb Code    20  freertos_evr.o(.text.EvrFreeRTOSQueue_QueueSend)
    EvrFreeRTOSQueue_QueueSendFailed         0x00000909   Thumb Code    16  freertos_evr.o(.text.EvrFreeRTOSQueue_QueueSendFailed)
    EvrFreeRTOSTasks_IncreaseTickCount       0x00000919   Thumb Code    20  freertos_evr.o(.text.EvrFreeRTOSTasks_IncreaseTickCount)
    EvrFreeRTOSTasks_LowPowerIdleBegin       0x0000092d   Thumb Code    20  freertos_evr.o(.text.EvrFreeRTOSTasks_LowPowerIdleBegin)
    EvrFreeRTOSTasks_LowPowerIdleEnd         0x00000941   Thumb Code    20  freertos_evr.o(.text.EvrFreeRTOSTasks_LowPowerIdleEnd)
    EvrFreeRTOSTasks_MovedTaskToReadyState   0x00000955   Thumb Code    20  freertos_evr.o(.text.EvrFreeRTOSTasks_MovedTaskToReadyState)
    EvrFreeRTOSTasks_PostMovedTaskToReadyState 0x00000969   Thumb Code    20  freertos_evr.o(.text.EvrFreeRTOSTasks_PostMovedTaskToReadyState)
    EvrFreeRTOSTasks_TaskCreate              0x0000097d   Thumb Code    16  freertos_evr.o(.text.EvrFreeRTOSTasks_TaskCreate)
    EvrFreeRTOSTasks_TaskDelay               0x0000098d   Thumb Code    20  freertos_evr.o(.text.EvrFreeRTOSTasks_TaskDelay)
    EvrFreeRTOSTasks_TaskDelayUntil          0x000009a1   Thumb Code    20  freertos_evr.o(.text.EvrFreeRTOSTasks_TaskDelayUntil)
    EvrFreeRTOSTasks_TaskIncrementTick       0x000009b5   Thumb Code    20  freertos_evr.o(.text.EvrFreeRTOSTasks_TaskIncrementTick)
    EvrFreeRTOSTasks_TaskPriorityDisinherit  0x000009c9   Thumb Code    20  freertos_evr.o(.text.EvrFreeRTOSTasks_TaskPriorityDisinherit)
    EvrFreeRTOSTasks_TaskSwitchedIn          0x000009dd   Thumb Code    20  freertos_evr.o(.text.EvrFreeRTOSTasks_TaskSwitchedIn)
    EvrFreeRTOSTasks_TaskSwitchedOut         0x000009f1   Thumb Code    20  freertos_evr.o(.text.EvrFreeRTOSTasks_TaskSwitchedOut)
    EvrFreeRTOSTimers_TimerCommandReceived   0x00000a05   Thumb Code    34  freertos_evr.o(.text.EvrFreeRTOSTimers_TimerCommandReceived)
    EvrFreeRTOSTimers_TimerExpired           0x00000a29   Thumb Code    20  freertos_evr.o(.text.EvrFreeRTOSTimers_TimerExpired)
    GPIO_init                                0x00000a3d   Thumb Code   190  dio.o(.text.GPIO_init)
    LCD_clear                                0x00000b41   Thumb Code    10  lcd_config.o(.text.LCD_clear)
    LCD_command                              0x00000b4d   Thumb Code    58  lcd_config.o(.text.LCD_command)
    LCD_data                                 0x00000b89   Thumb Code    46  lcd_config.o(.text.LCD_data)
    LCD_display                              0x00000bb9   Thumb Code    36  lcd_config.o(.text.LCD_display)
    LCD_line                                 0x00000bdd   Thumb Code    28  lcd_config.o(.text.LCD_line)
    LCD_start                                0x00000bf9   Thumb Code   116  lcd_config.o(.text.LCD_start)
    LCD_task                                 0x00000c6d   Thumb Code    96  main.o(.text.LCD_task)
    PendSV_Handler                           0x00000d21   Thumb Code   100  port.o(.text.PendSV_Handler)
    SVC_Handler                              0x00000d91   Thumb Code    36  port.o(.text.SVC_Handler)
    SysTick_Handler                          0x00000db5   Thumb Code    46  port.o(.text.SysTick_Handler)
    SystemInit                               0x00000de5   Thumb Code   112  system_tm4c123.o(.text.SystemInit)
    UART_task                                0x00000e55   Thumb Code   104  main.o(.text.UART_task)
    adc_init                                 0x00000f25   Thumb Code   116  adc.o(.text.adc_init)
    delayMs                                  0x00000ffd   Thumb Code    70  lcd_config.o(.text.delayMs)
    delayUs                                  0x00001045   Thumb Code    46  lcd_config.o(.text.delayUs)
    eTaskConfirmSleepModeStatus              0x00001075   Thumb Code    72  tasks.o(.text.eTaskConfirmSleepModeStatus)
    main                                     0x000010bd   Thumb Code   176  main.o(.text.main)
    main_task                                0x000011b1   Thumb Code   236  main.o(.text.main_task)
    print                                    0x0000129d   Thumb Code    28  lcd_config.o(.text.print)
    printchar                                0x000012b9   Thumb Code    18  lcd_config.o(.text.printchar)
    pvPortMalloc                             0x00001cc1   Thumb Code   114  heap_1.o(.text.pvPortMalloc)
    pxPortInitialiseStack                    0x00001d35   Thumb Code    40  port.o(.text.pxPortInitialiseStack)
    toString                                 0x00001d5d   Thumb Code   106  lcd_config.o(.text.toString)
    uxListRemove                             0x00001dc9   Thumb Code    36  list.o(.text.uxListRemove)
    vListInitialise                          0x00001ded   Thumb Code    22  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x00001e05   Thumb Code     6  list.o(.text.vListInitialiseItem)
    vListInsert                              0x00001e0d   Thumb Code    58  list.o(.text.vListInsert)
    vPortEnterCritical                       0x00001e5d   Thumb Code    70  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x00001ea5   Thumb Code    46  port.o(.text.vPortExitCritical)
    vPortFree                                0x00001ed5   Thumb Code    26  heap_1.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x00001ef1   Thumb Code   100  port.o(.text.vPortSetupTimerInterrupt)
    vPortSuppressTicksAndSleep               0x00001f55   Thumb Code   276  port.o(.text.vPortSuppressTicksAndSleep)
    vQueueWaitForMessageRestricted           0x00002069   Thumb Code    68  queue.o(.text.vQueueWaitForMessageRestricted)
    vTaskDelay                               0x000020ad   Thumb Code    90  tasks.o(.text.vTaskDelay)
    vTaskInternalSetTimeOutState             0x00002109   Thumb Code    26  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x00002125   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x00002135   Thumb Code    50  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x00002169   Thumb Code   110  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskStartScheduler                      0x000021d9   Thumb Code   172  tasks.o(.text.vTaskStartScheduler)
    vTaskStepTick                            0x0000228d   Thumb Code    58  tasks.o(.text.vTaskStepTick)
    vTaskSuspendAll                          0x000022c9   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x000022d9   Thumb Code   150  tasks.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x00002371   Thumb Code   274  port.o(.text.xPortStartScheduler)
    xQueueGenericCreate                      0x00002485   Thumb Code    88  queue.o(.text.xQueueGenericCreate)
    xQueueGenericReset                       0x000024dd   Thumb Code   178  queue.o(.text.xQueueGenericReset)
    xQueueGenericSend                        0x00002591   Thumb Code   486  queue.o(.text.xQueueGenericSend)
    xQueueReceive                            0x00002779   Thumb Code   414  queue.o(.text.xQueueReceive)
    xTaskCheckForTimeOut                     0x00002919   Thumb Code   166  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x000029c1   Thumb Code    96  tasks.o(.text.xTaskCreate)
    xTaskGetSchedulerState                   0x00002a21   Thumb Code    38  tasks.o(.text.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x00002a49   Thumb Code    12  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x00002a55   Thumb Code   432  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x00002c05   Thumb Code   214  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskRemoveFromEventList                 0x00002cdd   Thumb Code   252  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x00002dd9   Thumb Code   392  tasks.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x00002f61   Thumb Code    88  timers.o(.text.xTimerCreateTimerTask)
    _fp_init                                 0x00002fc1   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x00002fd9   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x00002fd9   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    EventRecorderInfo                        0x00002fdc   Data          24  eventrecorder.o(.rodata.EventRecorderInfo)
    uxTopUsedPriority                        0x00002ff8   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    Region$$Table$$Base                      0x00002ffc   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x0000301c   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_tm4c123.o(.data.SystemCoreClock)
    __libspace_start                         0x20000040   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x200000a0   Data           0  libspace.o(.bss)
    pxCurrentTCB                             0x2000056c   Data           4  tasks.o(.bss.pxCurrentTCB)



==============================================================================

Memory Map of the image

  Image Entry point : 0x0000030d

  Load Region LR_1 (Base: 0x00000000, Size: 0x00003024, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x0000301c, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x0000026c   Data   RO          141    RESET               startup_tm4c123.o
    0x0000026c   0x0000026c   0x00000008   Code   RO          821  * !!!main             c_w.l(__main.o)
    0x00000274   0x00000274   0x00000034   Code   RO          986    !!!scatter          c_w.l(__scatter.o)
    0x000002a8   0x000002a8   0x0000001a   Code   RO          988    !!handler_copy      c_w.l(__scatter_copy.o)
    0x000002c2   0x000002c2   0x00000002   PAD
    0x000002c4   0x000002c4   0x0000001c   Code   RO          990    !!handler_zi        c_w.l(__scatter_zi.o)
    0x000002e0   0x000002e0   0x00000002   Code   RO          850    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x000002e2   0x000002e2   0x00000004   Code   RO          856    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          859    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          862    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          864    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          866    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          869    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          871    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          873    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          875    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          877    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          879    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          881    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          883    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          885    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          887    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          889    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          893    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          895    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          897    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000000   Code   RO          899    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x000002e6   0x000002e6   0x00000002   Code   RO          900    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x000002e8   0x000002e8   0x00000002   Code   RO          922    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO          937    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO          939    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO          942    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO          945    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO          947    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000000   Code   RO          950    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x000002ea   0x000002ea   0x00000002   Code   RO          951    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x000002ec   0x000002ec   0x00000000   Code   RO          823    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x000002ec   0x000002ec   0x00000000   Code   RO          827    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x000002ec   0x000002ec   0x00000006   Code   RO          839    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x000002f2   0x000002f2   0x00000000   Code   RO          829    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x000002f2   0x000002f2   0x00000004   Code   RO          830    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x000002f6   0x000002f6   0x00000000   Code   RO          832    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x000002f6   0x000002f6   0x00000008   Code   RO          833    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x000002fe   0x000002fe   0x00000002   Code   RO          854    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x00000300   0x00000300   0x00000000   Code   RO          902    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x00000300   0x00000300   0x00000004   Code   RO          903    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x00000304   0x00000304   0x00000006   Code   RO          904    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0000030a   0x0000030a   0x00000002   PAD
    0x0000030c   0x0000030c   0x00000114   Code   RO          142  * .text               startup_tm4c123.o
    0x00000420   0x00000420   0x0000003e   Code   RO          807    .text               c_w.l(strlen.o)
    0x0000045e   0x0000045e   0x0000008a   Code   RO          809    .text               c_w.l(rt_memcpy_v6.o)
    0x000004e8   0x000004e8   0x00000010   Code   RO          811    .text               c_w.l(aeabi_memset.o)
    0x000004f8   0x000004f8   0x00000010   Code   RO          813    .text               c_w.l(aeabi_memset4.o)
    0x00000508   0x00000508   0x00000044   Code   RO          815    .text               c_w.l(rt_memclr.o)
    0x0000054c   0x0000054c   0x0000004e   Code   RO          817    .text               c_w.l(rt_memclr_w.o)
    0x0000059a   0x0000059a   0x00000006   Code   RO          819    .text               c_w.l(heapauxi.o)
    0x000005a0   0x000005a0   0x00000064   Code   RO          824    .text               c_w.l(rt_memcpy_w.o)
    0x00000604   0x00000604   0x0000004a   Code   RO          841    .text               c_w.l(sys_stackheap_outer.o)
    0x0000064e   0x0000064e   0x00000012   Code   RO          843    .text               c_w.l(exit.o)
    0x00000660   0x00000660   0x00000008   Code   RO          851    .text               c_w.l(libspace.o)
    0x00000668   0x00000668   0x0000000c   Code   RO          912    .text               c_w.l(sys_exit.o)
    0x00000674   0x00000674   0x00000002   Code   RO          927    .text               c_w.l(use_no_semi.o)
    0x00000676   0x00000676   0x00000000   Code   RO          929    .text               c_w.l(indicate_semi.o)
    0x00000676   0x00000676   0x00000002   PAD
    0x00000678   0x00000678   0x00000036   Code   RO           46    .text.ALARM_task    main.o
    0x000006ae   0x000006ae   0x00000002   PAD
    0x000006b0   0x000006b0   0x0000002e   Code   RO           97    .text.EventCheckFilter  eventrecorder.o
    0x000006de   0x000006de   0x00000002   PAD
    0x000006e0   0x000006e0   0x0000003a   Code   RO           83    .text.EventGetTS    eventrecorder.o
    0x0000071a   0x0000071a   0x00000002   PAD
    0x0000071c   0x0000071c   0x00000036   Code   RO          101    .text.EventRecord2  eventrecorder.o
    0x00000752   0x00000752   0x00000002   PAD
    0x00000754   0x00000754   0x00000068   Code   RO          103    .text.EventRecord4  eventrecorder.o
    0x000007bc   0x000007bc   0x000000ac   Code   RO           85    .text.EventRecordItem  eventrecorder.o
    0x00000868   0x00000868   0x0000000c   Code   RO           75    .text.EventRecorderTimerGetCount  eventrecorder.o
    0x00000874   0x00000874   0x00000010   Code   RO          333    .text.EvrFreeRTOSHeap_Malloc  freertos_evr.o
    0x00000884   0x00000884   0x00000014   Code   RO          267    .text.EvrFreeRTOSQueue_BlockingOnQueueReceive  freertos_evr.o
    0x00000898   0x00000898   0x00000014   Code   RO          269    .text.EvrFreeRTOSQueue_BlockingOnQueueSend  freertos_evr.o
    0x000008ac   0x000008ac   0x00000014   Code   RO          219    .text.EvrFreeRTOSQueue_QueueCreate  freertos_evr.o
    0x000008c0   0x000008c0   0x00000010   Code   RO          221    .text.EvrFreeRTOSQueue_QueueCreateFailed  freertos_evr.o
    0x000008d0   0x000008d0   0x00000014   Code   RO          243    .text.EvrFreeRTOSQueue_QueueReceive  freertos_evr.o
    0x000008e4   0x000008e4   0x00000010   Code   RO          251    .text.EvrFreeRTOSQueue_QueueReceiveFailed  freertos_evr.o
    0x000008f4   0x000008f4   0x00000014   Code   RO          239    .text.EvrFreeRTOSQueue_QueueSend  freertos_evr.o
    0x00000908   0x00000908   0x00000010   Code   RO          241    .text.EvrFreeRTOSQueue_QueueSendFailed  freertos_evr.o
    0x00000918   0x00000918   0x00000014   Code   RO          187    .text.EvrFreeRTOSTasks_IncreaseTickCount  freertos_evr.o
    0x0000092c   0x0000092c   0x00000014   Code   RO          201    .text.EvrFreeRTOSTasks_LowPowerIdleBegin  freertos_evr.o
    0x00000940   0x00000940   0x00000014   Code   RO          203    .text.EvrFreeRTOSTasks_LowPowerIdleEnd  freertos_evr.o
    0x00000954   0x00000954   0x00000014   Code   RO          197    .text.EvrFreeRTOSTasks_MovedTaskToReadyState  freertos_evr.o
    0x00000968   0x00000968   0x00000014   Code   RO          199    .text.EvrFreeRTOSTasks_PostMovedTaskToReadyState  freertos_evr.o
    0x0000097c   0x0000097c   0x00000010   Code   RO          167    .text.EvrFreeRTOSTasks_TaskCreate  freertos_evr.o
    0x0000098c   0x0000098c   0x00000014   Code   RO          175    .text.EvrFreeRTOSTasks_TaskDelay  freertos_evr.o
    0x000009a0   0x000009a0   0x00000014   Code   RO          173    .text.EvrFreeRTOSTasks_TaskDelayUntil  freertos_evr.o
    0x000009b4   0x000009b4   0x00000014   Code   RO          185    .text.EvrFreeRTOSTasks_TaskIncrementTick  freertos_evr.o
    0x000009c8   0x000009c8   0x00000014   Code   RO          195    .text.EvrFreeRTOSTasks_TaskPriorityDisinherit  freertos_evr.o
    0x000009dc   0x000009dc   0x00000014   Code   RO          191    .text.EvrFreeRTOSTasks_TaskSwitchedIn  freertos_evr.o
    0x000009f0   0x000009f0   0x00000014   Code   RO          189    .text.EvrFreeRTOSTasks_TaskSwitchedOut  freertos_evr.o
    0x00000a04   0x00000a04   0x00000022   Code   RO          277    .text.EvrFreeRTOSTimers_TimerCommandReceived  freertos_evr.o
    0x00000a26   0x00000a26   0x00000002   PAD
    0x00000a28   0x00000a28   0x00000014   Code   RO          279    .text.EvrFreeRTOSTimers_TimerExpired  freertos_evr.o
    0x00000a3c   0x00000a3c   0x000000be   Code   RO           63    .text.GPIO_init     dio.o
    0x00000afa   0x00000afa   0x00000002   PAD
    0x00000afc   0x00000afc   0x00000008   Code   RO           99    .text.GetContext    eventrecorder.o
    0x00000b04   0x00000b04   0x00000012   Code   RO          115    .text.GetRecordIndex  eventrecorder.o
    0x00000b16   0x00000b16   0x00000002   PAD
    0x00000b18   0x00000b18   0x00000012   Code   RO          123    .text.IncrementRecordsDumped  eventrecorder.o
    0x00000b2a   0x00000b2a   0x00000002   PAD
    0x00000b2c   0x00000b2c   0x00000012   Code   RO          121    .text.IncrementRecordsWritten  eventrecorder.o
    0x00000b3e   0x00000b3e   0x00000002   PAD
    0x00000b40   0x00000b40   0x0000000a   Code   RO           20    .text.LCD_clear     lcd_config.o
    0x00000b4a   0x00000b4a   0x00000002   PAD
    0x00000b4c   0x00000b4c   0x0000003a   Code   RO           10    .text.LCD_command   lcd_config.o
    0x00000b86   0x00000b86   0x00000002   PAD
    0x00000b88   0x00000b88   0x0000002e   Code   RO           18    .text.LCD_data      lcd_config.o
    0x00000bb6   0x00000bb6   0x00000002   PAD
    0x00000bb8   0x00000bb8   0x00000024   Code   RO           24    .text.LCD_display   lcd_config.o
    0x00000bdc   0x00000bdc   0x0000001c   Code   RO           22    .text.LCD_line      lcd_config.o
    0x00000bf8   0x00000bf8   0x00000074   Code   RO           16    .text.LCD_start     lcd_config.o
    0x00000c6c   0x00000c6c   0x00000078   Code   RO           44    .text.LCD_task      main.o
    0x00000ce4   0x00000ce4   0x00000024   Code   RO          117    .text.LockRecord    eventrecorder.o
    0x00000d08   0x00000d08   0x0000000a   Code   RO          105    .text.LockTS_Overflow  eventrecorder.o
    0x00000d12   0x00000d12   0x0000000e   PAD
    0x00000d20   0x00000d20   0x00000064   Code   RO          384    .text.PendSV_Handler  port.o
    0x00000d84   0x00000d84   0x0000000c   PAD
    0x00000d90   0x00000d90   0x00000024   Code   RO          368    .text.SVC_Handler   port.o
    0x00000db4   0x00000db4   0x0000002e   Code   RO          386    .text.SysTick_Handler  port.o
    0x00000de2   0x00000de2   0x00000002   PAD
    0x00000de4   0x00000de4   0x00000070   Code   RO          153    .text.SystemInit    system_tm4c123.o
    0x00000e54   0x00000e54   0x0000009c   Code   RO           42    .text.UART_task     main.o
    0x00000ef0   0x00000ef0   0x00000020   Code   RO          119    .text.UnlockRecord  eventrecorder.o
    0x00000f10   0x00000f10   0x0000000a   Code   RO          107    .text.UnlockTS_Overflow  eventrecorder.o
    0x00000f1a   0x00000f1a   0x00000002   PAD
    0x00000f1c   0x00000f1c   0x00000008   Code   RO          109    .text.UpdateTS      eventrecorder.o
    0x00000f24   0x00000f24   0x00000074   Code   RO            2    .text.adc_init      adc.o
    0x00000f98   0x00000f98   0x00000012   Code   RO          125    .text.atomic_inc32  eventrecorder.o
    0x00000faa   0x00000faa   0x00000002   PAD
    0x00000fac   0x00000fac   0x0000001c   Code   RO          127    .text.atomic_inc8   eventrecorder.o
    0x00000fc8   0x00000fc8   0x0000001c   Code   RO          113    .text.atomic_wr32   eventrecorder.o
    0x00000fe4   0x00000fe4   0x00000018   Code   RO          111    .text.atomic_wr8    eventrecorder.o
    0x00000ffc   0x00000ffc   0x00000046   Code   RO           14    .text.delayMs       lcd_config.o
    0x00001042   0x00001042   0x00000002   PAD
    0x00001044   0x00001044   0x0000002e   Code   RO           12    .text.delayUs       lcd_config.o
    0x00001072   0x00001072   0x00000002   PAD
    0x00001074   0x00001074   0x00000048   Code   RO          663    .text.eTaskConfirmSleepModeStatus  tasks.o
    0x000010bc   0x000010bc   0x000000f4   Code   RO           48    .text.main          main.o
    0x000011b0   0x000011b0   0x000000ec   Code   RO           40    .text.main_task     main.o
    0x0000129c   0x0000129c   0x0000001c   Code   RO           30    .text.print         lcd_config.o
    0x000012b8   0x000012b8   0x00000012   Code   RO           28    .text.printchar     lcd_config.o
    0x000012ca   0x000012ca   0x00000002   PAD
    0x000012cc   0x000012cc   0x000000c6   Code   RO          585    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x00001392   0x00001392   0x00000002   PAD
    0x00001394   0x00001394   0x000000e0   Code   RO          573    .text.prvAddNewTaskToReadyList  tasks.o
    0x00001474   0x00001474   0x0000005a   Code   RO          739    .text.prvCheckForValidListAndQueue  timers.o
    0x000014ce   0x000014ce   0x00000002   PAD
    0x000014d0   0x000014d0   0x0000004e   Code   RO          703    .text.prvCheckTasksWaitingTermination  tasks.o
    0x0000151e   0x0000151e   0x00000002   PAD
    0x00001520   0x00001520   0x00000026   Code   RO          463    .text.prvCopyDataFromQueue  queue.o
    0x00001546   0x00001546   0x00000002   PAD
    0x00001548   0x00001548   0x0000007a   Code   RO          449    .text.prvCopyDataToQueue  queue.o
    0x000015c2   0x000015c2   0x00000002   PAD
    0x000015c4   0x000015c4   0x00000012   Code   RO          579    .text.prvDeleteTCB  tasks.o
    0x000015d6   0x000015d6   0x00000002   PAD
    0x000015d8   0x000015d8   0x00000044   Code   RO          705    .text.prvGetExpectedIdleTime  tasks.o
    0x0000161c   0x0000161c   0x00000020   Code   RO          775    .text.prvGetNextExpireTime  timers.o
    0x0000163c   0x0000163c   0x00000082   Code   RO          611    .text.prvIdleTask   tasks.o
    0x000016be   0x000016be   0x00000002   PAD
    0x000016c0   0x000016c0   0x0000002a   Code   RO          429    .text.prvInitialiseNewQueue  queue.o
    0x000016ea   0x000016ea   0x00000002   PAD
    0x000016ec   0x000016ec   0x000000aa   Code   RO          571    .text.prvInitialiseNewTask  tasks.o
    0x00001796   0x00001796   0x00000002   PAD
    0x00001798   0x00001798   0x0000006e   Code   RO          701    .text.prvInitialiseTaskLists  tasks.o
    0x00001806   0x00001806   0x00000002   PAD
    0x00001808   0x00001808   0x00000040   Code   RO          789    .text.prvInsertTimerInActiveList  timers.o
    0x00001848   0x00001848   0x00000018   Code   RO          465    .text.prvIsQueueEmpty  queue.o
    0x00001860   0x00001860   0x0000001c   Code   RO          453    .text.prvIsQueueFull  queue.o
    0x0000187c   0x0000187c   0x00000096   Code   RO          451    .text.prvNotifyQueueSetContainer  queue.o
    0x00001912   0x00001912   0x00000002   PAD
    0x00001914   0x00001914   0x00000028   Code   RO          376    .text.prvPortStartFirstTask  port.o
    0x0000193c   0x0000193c   0x00000044   Code   RO          783    .text.prvProcessExpiredTimer  timers.o
    0x00001980   0x00001980   0x00000122   Code   RO          779    .text.prvProcessReceivedCommands  timers.o
    0x00001aa2   0x00001aa2   0x00000002   PAD
    0x00001aa4   0x00001aa4   0x00000080   Code   RO          777    .text.prvProcessTimerOrBlockTask  timers.o
    0x00001b24   0x00001b24   0x00000040   Code   RO          787    .text.prvReloadTimer  timers.o
    0x00001b64   0x00001b64   0x00000026   Code   RO          577    .text.prvResetNextTaskUnblockTime  tasks.o
    0x00001b8a   0x00001b8a   0x00000002   PAD
    0x00001b8c   0x00001b8c   0x0000002a   Code   RO          781    .text.prvSampleTimeNow  timers.o
    0x00001bb6   0x00001bb6   0x00000002   PAD
    0x00001bb8   0x00001bb8   0x00000034   Code   RO          785    .text.prvSwitchTimerLists  timers.o
    0x00001bec   0x00001bec   0x00000032   Code   RO          366    .text.prvTaskExitError  port.o
    0x00001c1e   0x00001c1e   0x00000002   PAD
    0x00001c20   0x00001c20   0x00000016   Code   RO          741    .text.prvTimerTask  timers.o
    0x00001c36   0x00001c36   0x00000002   PAD
    0x00001c38   0x00001c38   0x00000086   Code   RO          455    .text.prvUnlockQueue  queue.o
    0x00001cbe   0x00001cbe   0x00000002   PAD
    0x00001cc0   0x00001cc0   0x00000072   Code   RO          406    .text.pvPortMalloc  heap_1.o
    0x00001d32   0x00001d32   0x00000002   PAD
    0x00001d34   0x00001d34   0x00000028   Code   RO          364    .text.pxPortInitialiseStack  port.o
    0x00001d5c   0x00001d5c   0x0000006a   Code   RO           26    .text.toString      lcd_config.o
    0x00001dc6   0x00001dc6   0x00000002   PAD
    0x00001dc8   0x00001dc8   0x00000024   Code   RO          354    .text.uxListRemove  list.o
    0x00001dec   0x00001dec   0x00000016   Code   RO          346    .text.vListInitialise  list.o
    0x00001e02   0x00001e02   0x00000002   PAD
    0x00001e04   0x00001e04   0x00000006   Code   RO          348    .text.vListInitialiseItem  list.o
    0x00001e0a   0x00001e0a   0x00000002   PAD
    0x00001e0c   0x00001e0c   0x0000003a   Code   RO          352    .text.vListInsert   list.o
    0x00001e46   0x00001e46   0x00000002   PAD
    0x00001e48   0x00001e48   0x00000014   Code   RO          374    .text.vPortEnableVFP  port.o
    0x00001e5c   0x00001e5c   0x00000046   Code   RO          380    .text.vPortEnterCritical  port.o
    0x00001ea2   0x00001ea2   0x00000002   PAD
    0x00001ea4   0x00001ea4   0x0000002e   Code   RO          382    .text.vPortExitCritical  port.o
    0x00001ed2   0x00001ed2   0x00000002   PAD
    0x00001ed4   0x00001ed4   0x0000001a   Code   RO          408    .text.vPortFree     heap_1.o
    0x00001eee   0x00001eee   0x00000002   PAD
    0x00001ef0   0x00001ef0   0x00000064   Code   RO          372    .text.vPortSetupTimerInterrupt  port.o
    0x00001f54   0x00001f54   0x00000114   Code   RO          388    .text.vPortSuppressTicksAndSleep  port.o
    0x00002068   0x00002068   0x00000044   Code   RO          493    .text.vQueueWaitForMessageRestricted  queue.o
    0x000020ac   0x000020ac   0x0000005a   Code   RO          589    .text.vTaskDelay    tasks.o
    0x00002106   0x00002106   0x00000002   PAD
    0x00002108   0x00002108   0x0000001a   Code   RO          653    .text.vTaskInternalSetTimeOutState  tasks.o
    0x00002122   0x00002122   0x00000002   PAD
    0x00002124   0x00002124   0x0000000e   Code   RO          657    .text.vTaskMissedYield  tasks.o
    0x00002132   0x00002132   0x00000002   PAD
    0x00002134   0x00002134   0x00000032   Code   RO          641    .text.vTaskPlaceOnEventList  tasks.o
    0x00002166   0x00002166   0x00000002   PAD
    0x00002168   0x00002168   0x0000006e   Code   RO          645    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x000021d6   0x000021d6   0x00000002   PAD
    0x000021d8   0x000021d8   0x000000b4   Code   RO          609    .text.vTaskStartScheduler  tasks.o
    0x0000228c   0x0000228c   0x0000003a   Code   RO          635    .text.vTaskStepTick  tasks.o
    0x000022c6   0x000022c6   0x00000002   PAD
    0x000022c8   0x000022c8   0x00000010   Code   RO          583    .text.vTaskSuspendAll  tasks.o
    0x000022d8   0x000022d8   0x00000096   Code   RO          601    .text.vTaskSwitchContext  tasks.o
    0x0000236e   0x0000236e   0x00000002   PAD
    0x00002370   0x00002370   0x00000112   Code   RO          370    .text.xPortStartScheduler  port.o
    0x00002482   0x00002482   0x00000002   PAD
    0x00002484   0x00002484   0x00000058   Code   RO          427    .text.xQueueGenericCreate  queue.o
    0x000024dc   0x000024dc   0x000000b2   Code   RO          425    .text.xQueueGenericReset  queue.o
    0x0000258e   0x0000258e   0x00000002   PAD
    0x00002590   0x00002590   0x000001e6   Code   RO          441    .text.xQueueGenericSend  queue.o
    0x00002776   0x00002776   0x00000002   PAD
    0x00002778   0x00002778   0x0000019e   Code   RO          461    .text.xQueueReceive  queue.o
    0x00002916   0x00002916   0x00000002   PAD
    0x00002918   0x00002918   0x000000a6   Code   RO          655    .text.xTaskCheckForTimeOut  tasks.o
    0x000029be   0x000029be   0x00000002   PAD
    0x000029c0   0x000029c0   0x00000060   Code   RO          569    .text.xTaskCreate   tasks.o
    0x00002a20   0x00002a20   0x00000026   Code   RO          675    .text.xTaskGetSchedulerState  tasks.o
    0x00002a46   0x00002a46   0x00000002   PAD
    0x00002a48   0x00002a48   0x0000000c   Code   RO          617    .text.xTaskGetTickCount  tasks.o
    0x00002a54   0x00002a54   0x000001b0   Code   RO          615    .text.xTaskIncrementTick  tasks.o
    0x00002c04   0x00002c04   0x000000d6   Code   RO          679    .text.xTaskPriorityDisinherit  tasks.o
    0x00002cda   0x00002cda   0x00000002   PAD
    0x00002cdc   0x00002cdc   0x000000fc   Code   RO          647    .text.xTaskRemoveFromEventList  tasks.o
    0x00002dd8   0x00002dd8   0x00000188   Code   RO          587    .text.xTaskResumeAll  tasks.o
    0x00002f60   0x00002f60   0x00000060   Code   RO          737    .text.xTimerCreateTimerTask  timers.o
    0x00002fc0   0x00002fc0   0x0000001a   Code   RO          910    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x00002fda   0x00002fda   0x00000002   PAD
    0x00002fdc   0x00002fdc   0x00000018   Data   RO          130    .rodata.EventRecorderInfo  eventrecorder.o
    0x00002ff4   0x00002ff4   0x00000004   Data   RO           53    .rodata.str1.1      main.o
    0x00002ff8   0x00002ff8   0x00000004   Data   RO          708    .rodata.uxTopUsedPriority  tasks.o
    0x00002ffc   0x00002ffc   0x00000020   Data   RO          985    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x0000301c, Size: 0x00000008, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x0000301c   0x00000004   Data   RW          155    .data.SystemCoreClock  system_tm4c123.o
    0x20000004   0x00003020   0x00000004   Data   RW          394    .data.uxCriticalNesting  port.o


    Execution Region ER_ZI (Exec base: 0x20000040, Load base: 0x00003024, Size: 0x00002fa0, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000040        -       0x00000060   Zero   RW          852    .bss                c_w.l(libspace.o)
    0x200000a0        -       0x00000001   Zero   RW          131    .bss.TS_OverflowLock  eventrecorder.o
    0x200000a1   0x00003024   0x0000001f   PAD
    0x200000c0        -       0x000004a4   Zero   RW          129    .bss.noinit         eventrecorder.o
    0x20000564        -       0x00000004   Zero   RW          795    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x20000568        -       0x00000004   Zero   RW          414    .bss.pvPortMalloc.pucAlignedHeap  heap_1.o
    0x2000056c        -       0x00000004   Zero   RW          707    .bss.pxCurrentTCB   tasks.o
    0x20000570        -       0x00000004   Zero   RW          793    .bss.pxCurrentTimerList  timers.o
    0x20000574        -       0x00000004   Zero   RW          718    .bss.pxDelayedTaskList  tasks.o
    0x20000578        -       0x00000004   Zero   RW          719    .bss.pxOverflowDelayedTaskList  tasks.o
    0x2000057c        -       0x00000004   Zero   RW          794    .bss.pxOverflowTimerList  timers.o
    0x20000580        -       0x00000064   Zero   RW          709    .bss.pxReadyTasksLists  tasks.o
    0x200005e4        -       0x00002710   Zero   RW          415    .bss.ucHeap         heap_1.o
    0x20002cf4        -       0x00000001   Zero   RW          392    .bss.ucMaxSysCallPriority  port.o
    0x20002cf5   0x00003024   0x00000003   PAD
    0x20002cf8        -       0x00000004   Zero   RW          393    .bss.ulMaxPRIGROUPValue  port.o
    0x20002cfc        -       0x00000001   Zero   RW          397    .bss.ulStoppedTimerCompensation  port.o
    0x20002cfd   0x00003024   0x00000003   PAD
    0x20002d00        -       0x00000004   Zero   RW          396    .bss.ulTimerCountsForOneTick  port.o
    0x20002d04        -       0x00000004   Zero   RW          714    .bss.uxCurrentNumberOfTasks  tasks.o
    0x20002d08        -       0x00000004   Zero   RW          713    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x20002d0c        -       0x00000004   Zero   RW          716    .bss.uxSchedulerSuspended  tasks.o
    0x20002d10        -       0x00000004   Zero   RW          711    .bss.uxTaskNumber   tasks.o
    0x20002d14        -       0x00000004   Zero   RW          710    .bss.uxTopReadyPriority  tasks.o
    0x20002d18        -       0x00000014   Zero   RW          796    .bss.xActiveTimerList1  timers.o
    0x20002d2c        -       0x00000014   Zero   RW          797    .bss.xActiveTimerList2  timers.o
    0x20002d40        -       0x00000004   Zero   RW           52    .bss.xAlarmQueue    main.o
    0x20002d44        -       0x00000014   Zero   RW          727    .bss.xDelayedTaskList1  tasks.o
    0x20002d58        -       0x00000014   Zero   RW          728    .bss.xDelayedTaskList2  tasks.o
    0x20002d6c        -       0x00000004   Zero   RW          723    .bss.xIdleTaskHandle  tasks.o
    0x20002d70        -       0x00000004   Zero   RW           51    .bss.xLCDQueue      main.o
    0x20002d74        -       0x00000004   Zero   RW          395    .bss.xMaximumPossibleSuppressedTicks  port.o
    0x20002d78        -       0x00000004   Zero   RW          416    .bss.xNextFreeByte  heap_1.o
    0x20002d7c        -       0x00000004   Zero   RW          724    .bss.xNextTaskUnblockTime  tasks.o
    0x20002d80        -       0x00000004   Zero   RW          726    .bss.xNumOfOverflows  tasks.o
    0x20002d84        -       0x00000004   Zero   RW          725    .bss.xPendedTicks   tasks.o
    0x20002d88        -       0x00000014   Zero   RW          722    .bss.xPendingReadyList  tasks.o
    0x20002d9c        -       0x00000004   Zero   RW          715    .bss.xSchedulerRunning  tasks.o
    0x20002da0        -       0x00000014   Zero   RW          720    .bss.xSuspendedTaskList  tasks.o
    0x20002db4        -       0x00000014   Zero   RW          712    .bss.xTasksWaitingTermination  tasks.o
    0x20002dc8        -       0x00000004   Zero   RW          717    .bss.xTickCount     tasks.o
    0x20002dcc        -       0x00000004   Zero   RW          791    .bss.xTimerQueue    timers.o
    0x20002dd0        -       0x00000004   Zero   RW          792    .bss.xTimerTaskHandle  timers.o
    0x20002dd4        -       0x00000004   Zero   RW           50    .bss.xUARTQueue     main.o
    0x20002dd8        -       0x00000004   Zero   RW          721    .bss.xYieldPending  tasks.o
    0x20002ddc   0x00003024   0x00000004   PAD
    0x20002de0        -       0x00000000   Zero   RW          140    HEAP                startup_tm4c123.o
    0x20002de0        -       0x00000200   Zero   RW          139    STACK               startup_tm4c123.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       116          0          0          0          0        379   adc.o
       190          0          0          0          0        419   dio.o
       702          0         24          0       1189      10577   eventrecorder.o
       454          0          0          0          0      18216   freertos_evr.o
       140          0          0          0      10008       1691   heap_1.o
       562          0          0          0          0       2713   lcd_config.o
       122          0          0          0          0       2182   list.o
       810        144          4          0         12       2425   main.o
      1098         16          0          4         14       4996   port.o
      1772          0          0          0          0      22916   queue.o
       276         24        620          0        512       5448   startup_tm4c123.o
       112          0          0          4          0       6435   system_tm4c123.o
      3402          8          4          0        260      34410   tasks.o
       948         18          0          0         60      12123   timers.o

    ----------------------------------------------------------------------
     10844        222        684          8      12096     124930   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       140         12          0          0         41          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        16          0          0          0          0         68   aeabi_memset.o
        16          0          0          0          0         68   aeabi_memset4.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        62          0          0          0          0         76   strlen.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        26          0          0          0          0        116   fpinit.o

    ----------------------------------------------------------------------
       788         16          0          0         96       1208   Library Totals
         8          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       754         16          0          0         96       1092   c_w.l
        26          0          0          0          0        116   fz_wm.l

    ----------------------------------------------------------------------
       788         16          0          0         96       1208   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     11632        238        684          8      12192     125378   Grand Totals
     11632        238        684          8      12192     125378   ELF Image Totals
     11632        238        684          8          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                12316 (  12.03kB)
    Total RW  Size (RW Data + ZI Data)             12200 (  11.91kB)
    Total ROM Size (Code + RO Data + RW Data)      12324 (  12.04kB)

==============================================================================

